{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"cc75fbdb977a72e3c33a32b977ec965c1597d5c5","modified":1537588419420},{"_id":"source/CNAME","hash":"c1e8045d76cb8f3b319ff3508a7c6d7e3b52bc86","modified":1530002729000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1529978788000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1529978788000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1529978788000},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1529978788000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1529978788000},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1529978788000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1529978788000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1529978788000},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1529978788000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1529978788000},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1529978788000},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1529978788000},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1529978788000},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1529978788000},{"_id":"themes/next/_config.yml","hash":"2f1498be7d897bf229f36393935da2aae6a5187d","modified":1529979281000},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1529978788000},{"_id":"source/_posts/docker-images-container.md","hash":"41488c47362d01c9c5aed07452e70ed3982dac24","modified":1535534945049},{"_id":"source/_posts/docker-jenkins.md","hash":"5de2ea8ef9d37128779da8b3f0f8fddf634dbd5a","modified":1535188411751},{"_id":"source/_posts/hexo-on-github-and-enable-https.md","hash":"e0c30ab16e87c9a0ee06c46a8b3da5df50a284e1","modified":1564130564057},{"_id":"source/_posts/docker-install.md","hash":"caa37f1fd545fc04fa9aaf8d2679a7d13f1d0e53","modified":1536460777084},{"_id":"source/_posts/install-the-next-theme.md","hash":"db2de3d0c78214562b0c04165e342127b2ae4002","modified":1530376662000},{"_id":"source/_posts/install-jdk-maven-node.md","hash":"00a6a7f5b483b717af9f2f737a22c70280a1009d","modified":1560149018915},{"_id":"source/_posts/navicat-premium-import-tables.md","hash":"0e05ee64affc61354f5ec71a21ef802b32229f12","modified":1533127998000},{"_id":"source/_posts/kong-docker-install.md","hash":"84d3905335854f892f7af55ad56fd6bc8f1b039e","modified":1539930872768},{"_id":"source/_posts/springcloud-gateway-nacos-dynamic-routing.md","hash":"39c0a5ff71344249b7ba66ffe2e2e82363d0f92a","modified":1584022534552},{"_id":"source/_posts/mysql-remote-root-user.md","hash":"3c63b4f1c06d3db5edc9bb14260de816112b4b3a","modified":1564844202622},{"_id":"source/_posts/org-apache-ibatis-binding-BindingException-Parameter-not-found.md","hash":"cb032fed2857b1844c844470e6cfb245c948df57","modified":1564131095244},{"_id":"source/_posts/spingboot-static-resource-path.md","hash":"c4214e1ff22609f9b0da6e210a9e99a3a9af4a2a","modified":1569492765868},{"_id":"source/_posts/use-frp.md","hash":"fe0bee18e8aae9c956cd5d3f45ec0b76551653f1","modified":1536238722902},{"_id":"source/_posts/use-ideaj.md","hash":"d9a59fffdd37b683c234a938a8033de9e6dbdd07","modified":1571411933703},{"_id":"source/_posts/use-jenkins-for-auto-deploy.md","hash":"bcb423f28e8b7bc6755cb9337a7ee6ab386b2e8a","modified":1531128870000},{"_id":"source/_posts/using-qshell-sync.md","hash":"90bb2e0863ecf0b6a66c65dd1587352625ca42b2","modified":1531119797000},{"_id":"source/_posts/use-nexus-to-maven-private-service.md","hash":"eeca0f2b5c4495dca168abf5e01b53c9b36e3a3c","modified":1530377412000},{"_id":"source/_posts/use-oracle-xe.md","hash":"4b207c1d743290352d3ab8195bf536d8456711dc","modified":1564324413582},{"_id":"source/_posts/using-vuex-to-realize-dict.md","hash":"50ceba152361f75356f53e47217ac6306e7b3f9c","modified":1566270987269},{"_id":"source/_posts/vue-elementui-form-validation.md","hash":"e17940cc896cd484032a11c7e70943a4c0e1e5fb","modified":1571887077557},{"_id":"source/_posts/vue-packages-version-mismatch.md","hash":"0cec8a66e607c14bfb36c09e21513c55bfac9428","modified":1568275478633},{"_id":"source/_posts/vuepress-install.md","hash":"e99fba00e21dab50248e95c7b3cde8a4bc96facb","modified":1537754642268},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1529978788000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1529978788000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1529978750000},{"_id":"themes/next/.git/index","hash":"0367708bf5196190d8c2d83759bf2644221ae66f","modified":1535188318483},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1529978788000},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1529978788000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1529978788000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1529978788000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1529978788000},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1529978788000},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1529978788000},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1529978788000},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1529978788000},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1529978788000},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1529978788000},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1529978788000},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1529978788000},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1529978788000},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1529978788000},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1529978788000},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1529978788000},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1529978788000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1529978788000},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1529978788000},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1529978788000},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1529978788000},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1529978788000},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1529978788000},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1529978788000},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1529978788000},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1529978788000},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1529978788000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1529978788000},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1529978788000},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1529978788000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1529978789000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1529978789000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1529978789000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1529978750000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1529978750000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1529978750000},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1529978750000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1529978750000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1529978750000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1529978750000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1529978750000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1529978750000},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1529978750000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1529978750000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1529978750000},{"_id":"themes/next/.git/logs/HEAD","hash":"6b0639864cc50eee34012aca0ab5b56ce1ecebe0","modified":1529978788000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1529978788000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1529978788000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1529978788000},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1529978788000},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1529978788000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1529978788000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1529978788000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1529978788000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1529978788000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4bd05afdeb80049f2e9f04b2d8504701ae1f81d6","modified":1583928867646},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1529978788000},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1529978788000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1529978788000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1529978788000},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1529978788000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1529978788000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1529978788000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1529978788000},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1529978788000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1529978788000},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1529978788000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1529978788000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1529978788000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1529978788000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1529978788000},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1529978788000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1529978788000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1529978788000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1529978788000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1529978788000},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1529978788000},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1529978788000},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1529978788000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1529978788000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1529978789000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1529978789000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1529978789000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1529978789000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1529978789000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1529978789000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1529978789000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1529978789000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1529978789000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1529978789000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1529978789000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1529978789000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1529978789000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1529978789000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529978789000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529978789000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1529978789000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1529978789000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1529978789000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978788000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978788000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1529978789000},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1529978788000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1529978788000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1529978788000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1529978788000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1529978788000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1529978788000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1529978788000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1529978788000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1529978788000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1529978788000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1529978788000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1529978788000},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1529978788000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1529978788000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1529978788000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1529978788000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1529978788000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1529978788000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1529978788000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1529978789000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1529978789000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1529978789000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1529978789000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1529978789000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1529978789000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1529978789000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1529978789000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1529978789000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1529978789000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1529978789000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1529978789000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1529978789000},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1529978789000},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1529978789000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1529978789000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1529978789000},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1529978789000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1529978789000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1529978789000},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1529978789000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1529978789000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1529978789000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1529978789000},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1529978789000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1529978789000},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1529978789000},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1529978789000},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1529978789000},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1529978789000},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1529978789000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1529978789000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"6b0639864cc50eee34012aca0ab5b56ce1ecebe0","modified":1529978788000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1529978788000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1529978788000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1529978788000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1529978789000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1529978789000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1529978789000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1529978789000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1529978789000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529978789000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1529978789000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"6b0639864cc50eee34012aca0ab5b56ce1ecebe0","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1529978788000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1529978788000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1529978789000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1529978789000},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1529978789000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529978789000},{"_id":"themes/next/.git/objects/pack/pack-88df782ce6fe81241cc1f463a32af916d4193f78.idx","hash":"bb5ce2ffd2b23aeab4e99d217116d616aeac700b","modified":1529978788000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1529978789000},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1529978789000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1529978789000},{"_id":"themes/next/.git/objects/pack/pack-88df782ce6fe81241cc1f463a32af916d4193f78.pack","hash":"66da6ac57fd465b0b8f43f6be7c446eeee84eb9f","modified":1529978788000},{"_id":"public/2019/10/10/vue-elementui-form-validation/index.html","hash":"b03a671569d9c62bd87082a7243b5533f8dbc99f","modified":1587474861425},{"_id":"public/2019/09/12/vue-packages-version-mismatch/index.html","hash":"2551376b21436d8fbc1f939926fd5c6edc9e44ff","modified":1587474861426},{"_id":"public/2019/07/28/use-oracle-xe/index.html","hash":"abf038a2605959caea56e71d283e913f88c7f06f","modified":1587474861427},{"_id":"public/2019/07/20/org-apache-ibatis-binding-BindingException-Parameter-not-found/index.html","hash":"3f798bf0de5a7eeda01190691cbee20df9e303fa","modified":1587474861427},{"_id":"public/2018/08/23/docker-jenkins/index.html","hash":"aab3322267dcc27c275600ad9659443cd4b909bd","modified":1587474861427},{"_id":"public/2018/08/01/navicat-premium-import-tables/index.html","hash":"ac8f695cbd97507bb91bc3b96d1008d3d27ffc28","modified":1587474861427},{"_id":"public/2018/08/01/mysql-remote-root-user/index.html","hash":"2e11cfa2c34483ce0ab14ca32b854c991b1c8612","modified":1587474861427},{"_id":"public/2018/07/09/using-qshell-sync/index.html","hash":"77d649ae7fb921f66601b7a7705baa45f4d8cec9","modified":1587474861427},{"_id":"public/2018/07/01/use-nexus-to-maven-private-service/index.html","hash":"a44aa7558589fdf454cdec837131318d7cbad199","modified":1587474861427},{"_id":"public/archives/page/2/index.html","hash":"f872d8e983b6b21b9831fc81d0a9f342f233ab46","modified":1587474861427},{"_id":"public/archives/page/3/index.html","hash":"db68fa116e3ab712a30713abab95d3af43fadf04","modified":1587474861427},{"_id":"public/archives/2018/index.html","hash":"88321b9c5b48f5c00077b4921e546edf0b98abb9","modified":1587474861427},{"_id":"public/archives/2018/page/2/index.html","hash":"821c3632f48a9851d627fabe3c3179e74c4bb36f","modified":1587474861427},{"_id":"public/archives/2018/06/index.html","hash":"f7f4973478361ac7ef9db406967e7343c0bd9a2e","modified":1587474861428},{"_id":"public/archives/2018/07/index.html","hash":"b1717a14ff9b48c7505430688c0cfd9da9a43cf5","modified":1587474861428},{"_id":"public/archives/2018/08/index.html","hash":"16e488725ea5f9dc6918a89dabd5a06d6e958360","modified":1587474861428},{"_id":"public/archives/2018/09/index.html","hash":"497a8e1863ea939ba141361d24fde786cc2f8c41","modified":1587474861428},{"_id":"public/archives/2019/index.html","hash":"859e9070e67579ca2aa3603508dab2e0855656b8","modified":1587474861428},{"_id":"public/archives/2019/07/index.html","hash":"9611978b068539d397907e720bcc8aeaf6290d78","modified":1587474861428},{"_id":"public/archives/2019/08/index.html","hash":"73e36e2665d80590b5b280805cacc90ad66f576a","modified":1587474861428},{"_id":"public/archives/2019/09/index.html","hash":"27a1b6ed40ecdd97193d8d1a08994ee0f9196fd8","modified":1587474861428},{"_id":"public/archives/2019/10/index.html","hash":"86c641fbaebe55b2ad5545435a806edfc2558191","modified":1587474861428},{"_id":"public/2019/09/26/spingboot-static-resource-path/index.html","hash":"b593648c382af6abed1c9c565ff737ed6fa626d2","modified":1587474861428},{"_id":"public/2019/08/20/using-vuex-to-realize-dict/index.html","hash":"ce8113da2ff10cdfe47b2d9090eed74ae4538aad","modified":1587474861428},{"_id":"public/2019/07/28/use-ideaj/index.html","hash":"e8187896858cef1bf2e286eabffdf2ef85328f5a","modified":1587474861429},{"_id":"public/2018/09/23/vuepress-install/index.html","hash":"a16595755095eb949b2c08f997e572c07fb3dd4a","modified":1587474861429},{"_id":"public/2018/08/30/kong-docker-install/index.html","hash":"fe33ccd0ac0bb21e84b2e425ee0304fb3bf110b7","modified":1587474861429},{"_id":"public/2018/08/24/docker-images-container/index.html","hash":"4236fef3f69a43db15675adfad78edf14244a10b","modified":1587474861429},{"_id":"public/2018/08/20/docker-install/index.html","hash":"3f56e936441a0f340476ebd11522067e094524d8","modified":1587474861429},{"_id":"public/2018/07/01/use-frp/index.html","hash":"81838957d07c15ae31ba2552b3720b9866566b62","modified":1587474861429},{"_id":"public/2018/06/27/use-jenkins-for-auto-deploy/index.html","hash":"472e4788f2a22c1e89783d23a5a72a8d3fcbb6ba","modified":1587474861429},{"_id":"public/2018/06/26/install-jdk-maven-node/index.html","hash":"663de2e691daf43335b37c21d4c152055dc5f4b8","modified":1587474861430},{"_id":"public/2018/06/26/install-the-next-theme/index.html","hash":"bcdd5600cb7037ccad8f0347aaf66057c4795e3d","modified":1587474861430},{"_id":"public/2018/06/25/hexo-on-github-and-enable-https/index.html","hash":"1cff6042497206e89f31739a65bf9ae33b2ae961","modified":1587474861430},{"_id":"public/archives/index.html","hash":"ca41dc098676ab5711d5c49e5d7cd76a64596def","modified":1587474861430},{"_id":"public/index.html","hash":"68f525b4883dc0ffb29029192e96b8705404af75","modified":1587474861430},{"_id":"public/page/2/index.html","hash":"c679a3de2b0c8619c7ac433526b341714547250d","modified":1587474861430},{"_id":"public/page/3/index.html","hash":"2980f5dc81c1265d5c0eb47a9f2fb7fdbb15d3bc","modified":1587474861430},{"_id":"public/2020/03/11/springcloud-gateway-nacos-dynamic-routing/index.html","hash":"cf511c365f495f7085e331bf63854b43d561ada5","modified":1587474861439},{"_id":"public/archives/2020/index.html","hash":"178c800374294d26c0932d931bc296f2c96cdab6","modified":1587474861439},{"_id":"public/archives/2020/03/index.html","hash":"988b5318b775d95a5f38294ffd5652c61ba0ee97","modified":1587474861439},{"_id":"public/CNAME","hash":"c1e8045d76cb8f3b319ff3508a7c6d7e3b52bc86","modified":1587474861439},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1587474861439},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1587474861439},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1587474861439},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1587474861439},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1587474861439},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1587474861440},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1587474861440},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1587474861440},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1587474861440},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1587474861440},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1587474861440},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1587474861440},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1587474861440},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1587474861440},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1587474861440},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1587474861440},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1587474861440},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1587474861440},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1587474861440},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1587474861440},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1587474861440},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1587474861440},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1587474861440},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1587474861440},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1587474861441},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1587474861441},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1587474861441},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1587474861441},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1587474861441},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1587474861441},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1587474861441},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1587474861441},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1587474861441},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1587474862392},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1587474862395},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1587474862410},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1587474862411},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1587474862412},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1587474862412},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1587474862413},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1587474862413},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1587474862413},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1587474862413},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1587474862414},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1587474862414},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1587474862414},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1587474862415},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1587474862415},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1587474862415},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1587474862415},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1587474862415},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1587474862415},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1587474862415},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1587474862415},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1587474862416},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1587474862417},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1587474862417},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1587474862417},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1587474862417},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1587474862417},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1587474862417},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1587474862417},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1587474862417},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1587474862417},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1587474862417},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1587474862417},{"_id":"public/css/main.css","hash":"ca2851afc01c4d5e65f124b377f00990d5e7d9ec","modified":1587474862418},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1587474862426},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1587474862426},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1587474862427},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1587474862427},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1587474862427},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1587474862427},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1587474862427},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1587474862427},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1587474862427},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1587474862428},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1587474862428},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1587474862428},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1587474862428},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1587474862428},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1587474862469},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1587474862470},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1587474862548},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1587474862548},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1587474862601},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1587474862601},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1587474862615},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1587474862615},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1587474862615},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1587474862615},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1587474862615},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1587474862634},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1587474862634},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1587474862635},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1587474862635},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1587474862638},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1587474862652},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1587474862655},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1587474862665},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1587474862693},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1587474862703}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"docker使用镜像和操作容器","date":"2018-08-24T09:34:27.000Z","_content":"\n## 使用镜像\n\n### 拉取镜像\n\nDocker Hub 上有大量的镜像可以用，从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式如：\n\n```\n$ docker pull ubuntu\n```\n\n对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。\n\n\n如果想拉取指定镜像版本\n\n```\n$ docker pull ubuntu:16.04\n```\n\n### 列出镜像\n\n```\n$ docker images\n```\n\n还可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。\n\n```\n$ docker system df\n```\n\n### 删除本地镜像\n\n```\n$ docker image rm <镜像名> [<镜像短ID> ...]\n```\n\n比如：\n\n```\n$ docker image rm 501ad78535f0\n$ docker image rm 501a\n$ docker image rm centos\n```\n\n## 操作容器\n\n有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。\n\n### 运行容器\n\n启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。\n\n1.新建并启动\n\n```\n$ docker run -it --rm -p 8888:8080 tomcat:8.0\n```\n\n2.启动和终止容器\n\n```\n$ docker ps #列出所有启动的容器\n$ docker ps -a #列出所有已终止的容器\n```\n想要启动和终止容器，只需\n\n```\n\n$ docker start <容器ID>\n$ docker stop <容器ID>\n```\n\n### 进入容器使用 exec 命令\n\ndocker exec 后边可以跟多个参数，这里主要说明 -i -t 参数。\n\n只用 -i 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。\n\n当 -it 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。\n\n```\n$ docker exec -i 69d1 bash\nls\nbin\nboot\ndev\n...\n\n$ docker exec -it 69d1 bash\nroot@69d137adef7a:/#\n```\n\n另外如果从这个容器中 exit，不会导致容器的停止。这就是为什么推荐大家使用 docker exec 的原因。\n\n### 导出和导入容器\n\n```\n$ docker export 7691a814370e > ubuntu.tar\n$ cat ubuntu.tar | docker import - test/ubuntu:v1.0\n```\n\n### 停用全部运行的容器\n\n```\ndocker stop $(docker ps -q)\n```\n\n### 删除全部容器\n\n```\ndocker rm $(docker ps -aq)\ndocker stop $(docker ps -q) & docker rm $(docker ps -aq) #实现一条命令停用并删除容器\n```\n\n## 常用命令\n```\n\n#同步宿主机与容器时间\n$ docker run --name gaoxi-user-1 -p 18081:8080 -v /etc/localtime:/etc/localtime chaimm/tomcat:1.1\n\n#在mac下无法使用上面的命令\n$ docker run --name gaoxi-user-1 -p 18081:8080 -e TZ=\"Asia/Shanghai\" -it chaimm/tomcat:1.1 bash\n\n$ docker run --name zookeeper -p 2181:2181 -p 10000:8080 chaimm/zookeeper-dubbo:1.0\n\n$ docker run --name zookeeper-1 --restart always -d zookeeper:3.4.11\n\n#下载好的zookeeper镜像存储到本地文件\n$ docker save -o /opt/downloads/zookeeper-image.tar zookeeper:3.4.11\n\n#文件上传到内网中可以使用以下命令将其载入镜像\n$docker load -i /opt/images/zookeeper-image.tar\n\n\n#获取所有容器名称及其IP地址\n$ docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq) \n\n\ndocker ps\t顯示所有 containers\ndocker images\t顯示所有的 images\ndocker rmi -f db7e8a0d84e3\t移除一個 image\ndocker pause bb230bd64efa\t停止 container 中的所有 processes\ndocker unpause bb230bd64efa\t取消停止 container 中的所有 processes\ndocker logs bb230bd64efa\t查看 container 的 log\ndocker stop bb230bd64efa\t停止 container 運作\ndocker start bb230bd64efa\t啟用 container\ndocker commit bb230bd64efa ubuntu:12.04\tcommit container 中的修改， bb230bd64efa 是 container id， ubuntu:12.04 是 image 名稱\ndocker run -it ubuntu:12.04 bash\t啟動 container ，並登入\n```\n\n```\ndocker run -d --name kong\\\n        -e \"KONG_DATABASE=postgres\" \\\n        -e \"KONG_PG_HOST=192.168.200.11\" \\\n        -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n        -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n        -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n        -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n        -p 8888:8000 \\\n        -p 8445:8443 \\\n        -p 8889:8001 \\\n        -p 8446:8444 \\\n        kong:latest\n```","source":"_posts/docker-images-container.md","raw":"---\ntitle: docker使用镜像和操作容器\ndate: 2018-08-24 17:34:27\ntags:\n---\n\n## 使用镜像\n\n### 拉取镜像\n\nDocker Hub 上有大量的镜像可以用，从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式如：\n\n```\n$ docker pull ubuntu\n```\n\n对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。\n\n\n如果想拉取指定镜像版本\n\n```\n$ docker pull ubuntu:16.04\n```\n\n### 列出镜像\n\n```\n$ docker images\n```\n\n还可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。\n\n```\n$ docker system df\n```\n\n### 删除本地镜像\n\n```\n$ docker image rm <镜像名> [<镜像短ID> ...]\n```\n\n比如：\n\n```\n$ docker image rm 501ad78535f0\n$ docker image rm 501a\n$ docker image rm centos\n```\n\n## 操作容器\n\n有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。\n\n### 运行容器\n\n启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。\n\n1.新建并启动\n\n```\n$ docker run -it --rm -p 8888:8080 tomcat:8.0\n```\n\n2.启动和终止容器\n\n```\n$ docker ps #列出所有启动的容器\n$ docker ps -a #列出所有已终止的容器\n```\n想要启动和终止容器，只需\n\n```\n\n$ docker start <容器ID>\n$ docker stop <容器ID>\n```\n\n### 进入容器使用 exec 命令\n\ndocker exec 后边可以跟多个参数，这里主要说明 -i -t 参数。\n\n只用 -i 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。\n\n当 -it 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。\n\n```\n$ docker exec -i 69d1 bash\nls\nbin\nboot\ndev\n...\n\n$ docker exec -it 69d1 bash\nroot@69d137adef7a:/#\n```\n\n另外如果从这个容器中 exit，不会导致容器的停止。这就是为什么推荐大家使用 docker exec 的原因。\n\n### 导出和导入容器\n\n```\n$ docker export 7691a814370e > ubuntu.tar\n$ cat ubuntu.tar | docker import - test/ubuntu:v1.0\n```\n\n### 停用全部运行的容器\n\n```\ndocker stop $(docker ps -q)\n```\n\n### 删除全部容器\n\n```\ndocker rm $(docker ps -aq)\ndocker stop $(docker ps -q) & docker rm $(docker ps -aq) #实现一条命令停用并删除容器\n```\n\n## 常用命令\n```\n\n#同步宿主机与容器时间\n$ docker run --name gaoxi-user-1 -p 18081:8080 -v /etc/localtime:/etc/localtime chaimm/tomcat:1.1\n\n#在mac下无法使用上面的命令\n$ docker run --name gaoxi-user-1 -p 18081:8080 -e TZ=\"Asia/Shanghai\" -it chaimm/tomcat:1.1 bash\n\n$ docker run --name zookeeper -p 2181:2181 -p 10000:8080 chaimm/zookeeper-dubbo:1.0\n\n$ docker run --name zookeeper-1 --restart always -d zookeeper:3.4.11\n\n#下载好的zookeeper镜像存储到本地文件\n$ docker save -o /opt/downloads/zookeeper-image.tar zookeeper:3.4.11\n\n#文件上传到内网中可以使用以下命令将其载入镜像\n$docker load -i /opt/images/zookeeper-image.tar\n\n\n#获取所有容器名称及其IP地址\n$ docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq) \n\n\ndocker ps\t顯示所有 containers\ndocker images\t顯示所有的 images\ndocker rmi -f db7e8a0d84e3\t移除一個 image\ndocker pause bb230bd64efa\t停止 container 中的所有 processes\ndocker unpause bb230bd64efa\t取消停止 container 中的所有 processes\ndocker logs bb230bd64efa\t查看 container 的 log\ndocker stop bb230bd64efa\t停止 container 運作\ndocker start bb230bd64efa\t啟用 container\ndocker commit bb230bd64efa ubuntu:12.04\tcommit container 中的修改， bb230bd64efa 是 container id， ubuntu:12.04 是 image 名稱\ndocker run -it ubuntu:12.04 bash\t啟動 container ，並登入\n```\n\n```\ndocker run -d --name kong\\\n        -e \"KONG_DATABASE=postgres\" \\\n        -e \"KONG_PG_HOST=192.168.200.11\" \\\n        -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n        -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n        -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n        -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n        -p 8888:8000 \\\n        -p 8445:8443 \\\n        -p 8889:8001 \\\n        -p 8446:8444 \\\n        kong:latest\n```","slug":"docker-images-container","published":1,"updated":"2018-08-29T09:29:05.049Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjxl0000tbwgyzki6tp4","content":"<h2 id=\"使用镜像\"><a href=\"#使用镜像\" class=\"headerlink\" title=\"使用镜像\"></a>使用镜像</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><p>Docker Hub 上有大量的镜像可以用，从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu</span><br></pre></td></tr></table></figure>\n<p>对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。</p>\n<p>如果想拉取指定镜像版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu:16.04</span><br></pre></td></tr></table></figure>\n<h3 id=\"列出镜像\"><a href=\"#列出镜像\" class=\"headerlink\" title=\"列出镜像\"></a>列出镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker images</span><br></pre></td></tr></table></figure>\n<p>还可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker system df</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除本地镜像\"><a href=\"#删除本地镜像\" class=\"headerlink\" title=\"删除本地镜像\"></a>删除本地镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker image rm &lt;镜像名&gt; [&lt;镜像短ID&gt; ...]</span><br></pre></td></tr></table></figure>\n<p>比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker image rm 501ad78535f0</span><br><span class=\"line\">$ docker image rm 501a</span><br><span class=\"line\">$ docker image rm centos</span><br></pre></td></tr></table></figure>\n<h2 id=\"操作容器\"><a href=\"#操作容器\" class=\"headerlink\" title=\"操作容器\"></a>操作容器</h2><p>有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。</p>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><p>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。</p>\n<p>1.新建并启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -it --rm -p 8888:8080 tomcat:8.0</span><br></pre></td></tr></table></figure>\n<p>2.启动和终止容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker ps #列出所有启动的容器</span><br><span class=\"line\">$ docker ps -a #列出所有已终止的容器</span><br></pre></td></tr></table></figure>\n<p>想要启动和终止容器，只需</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ docker start &lt;容器ID&gt;</span><br><span class=\"line\">$ docker stop &lt;容器ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入容器使用-exec-命令\"><a href=\"#进入容器使用-exec-命令\" class=\"headerlink\" title=\"进入容器使用 exec 命令\"></a>进入容器使用 exec 命令</h3><p>docker exec 后边可以跟多个参数，这里主要说明 -i -t 参数。</p>\n<p>只用 -i 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。</p>\n<p>当 -it 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker exec -i 69d1 bash</span><br><span class=\"line\">ls</span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker exec -it 69d1 bash</span><br><span class=\"line\">root@69d137adef7a:/#</span><br></pre></td></tr></table></figure>\n<p>另外如果从这个容器中 exit，不会导致容器的停止。这就是为什么推荐大家使用 docker exec 的原因。</p>\n<h3 id=\"导出和导入容器\"><a href=\"#导出和导入容器\" class=\"headerlink\" title=\"导出和导入容器\"></a>导出和导入容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker export 7691a814370e &gt; ubuntu.tar</span><br><span class=\"line\">$ cat ubuntu.tar | docker import - test/ubuntu:v1.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"停用全部运行的容器\"><a href=\"#停用全部运行的容器\" class=\"headerlink\" title=\"停用全部运行的容器\"></a>停用全部运行的容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop $(docker ps -q)</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除全部容器\"><a href=\"#删除全部容器\" class=\"headerlink\" title=\"删除全部容器\"></a>删除全部容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm $(docker ps -aq)</span><br><span class=\"line\">docker stop $(docker ps -q) &amp; docker rm $(docker ps -aq) #实现一条命令停用并删除容器</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#同步宿主机与容器时间</span><br><span class=\"line\">$ docker run --name gaoxi-user-1 -p 18081:8080 -v /etc/localtime:/etc/localtime chaimm/tomcat:1.1</span><br><span class=\"line\"></span><br><span class=\"line\">#在mac下无法使用上面的命令</span><br><span class=\"line\">$ docker run --name gaoxi-user-1 -p 18081:8080 -e TZ=&quot;Asia/Shanghai&quot; -it chaimm/tomcat:1.1 bash</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker run --name zookeeper -p 2181:2181 -p 10000:8080 chaimm/zookeeper-dubbo:1.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker run --name zookeeper-1 --restart always -d zookeeper:3.4.11</span><br><span class=\"line\"></span><br><span class=\"line\">#下载好的zookeeper镜像存储到本地文件</span><br><span class=\"line\">$ docker save -o /opt/downloads/zookeeper-image.tar zookeeper:3.4.11</span><br><span class=\"line\"></span><br><span class=\"line\">#文件上传到内网中可以使用以下命令将其载入镜像</span><br><span class=\"line\">$docker load -i /opt/images/zookeeper-image.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#获取所有容器名称及其IP地址</span><br><span class=\"line\">$ docker inspect -f &apos;&#123;&#123;.Name&#125;&#125; - &#123;&#123;.NetworkSettings.IPAddress &#125;&#125;&apos; $(docker ps -aq) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker ps\t顯示所有 containers</span><br><span class=\"line\">docker images\t顯示所有的 images</span><br><span class=\"line\">docker rmi -f db7e8a0d84e3\t移除一個 image</span><br><span class=\"line\">docker pause bb230bd64efa\t停止 container 中的所有 processes</span><br><span class=\"line\">docker unpause bb230bd64efa\t取消停止 container 中的所有 processes</span><br><span class=\"line\">docker logs bb230bd64efa\t查看 container 的 log</span><br><span class=\"line\">docker stop bb230bd64efa\t停止 container 運作</span><br><span class=\"line\">docker start bb230bd64efa\t啟用 container</span><br><span class=\"line\">docker commit bb230bd64efa ubuntu:12.04\tcommit container 中的修改， bb230bd64efa 是 container id， ubuntu:12.04 是 image 名稱</span><br><span class=\"line\">docker run -it ubuntu:12.04 bash\t啟動 container ，並登入</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong\\</span><br><span class=\"line\">        -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PG_HOST=192.168.200.11&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">        -p 8888:8000 \\</span><br><span class=\"line\">        -p 8445:8443 \\</span><br><span class=\"line\">        -p 8889:8001 \\</span><br><span class=\"line\">        -p 8446:8444 \\</span><br><span class=\"line\">        kong:latest</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"使用镜像\"><a href=\"#使用镜像\" class=\"headerlink\" title=\"使用镜像\"></a>使用镜像</h2><h3 id=\"拉取镜像\"><a href=\"#拉取镜像\" class=\"headerlink\" title=\"拉取镜像\"></a>拉取镜像</h3><p>Docker Hub 上有大量的镜像可以用，从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu</span><br></pre></td></tr></table></figure>\n<p>对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。</p>\n<p>如果想拉取指定镜像版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker pull ubuntu:16.04</span><br></pre></td></tr></table></figure>\n<h3 id=\"列出镜像\"><a href=\"#列出镜像\" class=\"headerlink\" title=\"列出镜像\"></a>列出镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker images</span><br></pre></td></tr></table></figure>\n<p>还可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker system df</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除本地镜像\"><a href=\"#删除本地镜像\" class=\"headerlink\" title=\"删除本地镜像\"></a>删除本地镜像</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker image rm &lt;镜像名&gt; [&lt;镜像短ID&gt; ...]</span><br></pre></td></tr></table></figure>\n<p>比如：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker image rm 501ad78535f0</span><br><span class=\"line\">$ docker image rm 501a</span><br><span class=\"line\">$ docker image rm centos</span><br></pre></td></tr></table></figure>\n<h2 id=\"操作容器\"><a href=\"#操作容器\" class=\"headerlink\" title=\"操作容器\"></a>操作容器</h2><p>有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。</p>\n<h3 id=\"运行容器\"><a href=\"#运行容器\" class=\"headerlink\" title=\"运行容器\"></a>运行容器</h3><p>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。</p>\n<p>1.新建并启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run -it --rm -p 8888:8080 tomcat:8.0</span><br></pre></td></tr></table></figure>\n<p>2.启动和终止容器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker ps #列出所有启动的容器</span><br><span class=\"line\">$ docker ps -a #列出所有已终止的容器</span><br></pre></td></tr></table></figure>\n<p>想要启动和终止容器，只需</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">$ docker start &lt;容器ID&gt;</span><br><span class=\"line\">$ docker stop &lt;容器ID&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"进入容器使用-exec-命令\"><a href=\"#进入容器使用-exec-命令\" class=\"headerlink\" title=\"进入容器使用 exec 命令\"></a>进入容器使用 exec 命令</h3><p>docker exec 后边可以跟多个参数，这里主要说明 -i -t 参数。</p>\n<p>只用 -i 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。</p>\n<p>当 -it 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker exec -i 69d1 bash</span><br><span class=\"line\">ls</span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker exec -it 69d1 bash</span><br><span class=\"line\">root@69d137adef7a:/#</span><br></pre></td></tr></table></figure>\n<p>另外如果从这个容器中 exit，不会导致容器的停止。这就是为什么推荐大家使用 docker exec 的原因。</p>\n<h3 id=\"导出和导入容器\"><a href=\"#导出和导入容器\" class=\"headerlink\" title=\"导出和导入容器\"></a>导出和导入容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker export 7691a814370e &gt; ubuntu.tar</span><br><span class=\"line\">$ cat ubuntu.tar | docker import - test/ubuntu:v1.0</span><br></pre></td></tr></table></figure>\n<h3 id=\"停用全部运行的容器\"><a href=\"#停用全部运行的容器\" class=\"headerlink\" title=\"停用全部运行的容器\"></a>停用全部运行的容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop $(docker ps -q)</span><br></pre></td></tr></table></figure>\n<h3 id=\"删除全部容器\"><a href=\"#删除全部容器\" class=\"headerlink\" title=\"删除全部容器\"></a>删除全部容器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rm $(docker ps -aq)</span><br><span class=\"line\">docker stop $(docker ps -q) &amp; docker rm $(docker ps -aq) #实现一条命令停用并删除容器</span><br></pre></td></tr></table></figure>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#同步宿主机与容器时间</span><br><span class=\"line\">$ docker run --name gaoxi-user-1 -p 18081:8080 -v /etc/localtime:/etc/localtime chaimm/tomcat:1.1</span><br><span class=\"line\"></span><br><span class=\"line\">#在mac下无法使用上面的命令</span><br><span class=\"line\">$ docker run --name gaoxi-user-1 -p 18081:8080 -e TZ=&quot;Asia/Shanghai&quot; -it chaimm/tomcat:1.1 bash</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker run --name zookeeper -p 2181:2181 -p 10000:8080 chaimm/zookeeper-dubbo:1.0</span><br><span class=\"line\"></span><br><span class=\"line\">$ docker run --name zookeeper-1 --restart always -d zookeeper:3.4.11</span><br><span class=\"line\"></span><br><span class=\"line\">#下载好的zookeeper镜像存储到本地文件</span><br><span class=\"line\">$ docker save -o /opt/downloads/zookeeper-image.tar zookeeper:3.4.11</span><br><span class=\"line\"></span><br><span class=\"line\">#文件上传到内网中可以使用以下命令将其载入镜像</span><br><span class=\"line\">$docker load -i /opt/images/zookeeper-image.tar</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#获取所有容器名称及其IP地址</span><br><span class=\"line\">$ docker inspect -f &apos;&#123;&#123;.Name&#125;&#125; - &#123;&#123;.NetworkSettings.IPAddress &#125;&#125;&apos; $(docker ps -aq) </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">docker ps\t顯示所有 containers</span><br><span class=\"line\">docker images\t顯示所有的 images</span><br><span class=\"line\">docker rmi -f db7e8a0d84e3\t移除一個 image</span><br><span class=\"line\">docker pause bb230bd64efa\t停止 container 中的所有 processes</span><br><span class=\"line\">docker unpause bb230bd64efa\t取消停止 container 中的所有 processes</span><br><span class=\"line\">docker logs bb230bd64efa\t查看 container 的 log</span><br><span class=\"line\">docker stop bb230bd64efa\t停止 container 運作</span><br><span class=\"line\">docker start bb230bd64efa\t啟用 container</span><br><span class=\"line\">docker commit bb230bd64efa ubuntu:12.04\tcommit container 中的修改， bb230bd64efa 是 container id， ubuntu:12.04 是 image 名稱</span><br><span class=\"line\">docker run -it ubuntu:12.04 bash\t啟動 container ，並登入</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong\\</span><br><span class=\"line\">        -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PG_HOST=192.168.200.11&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">        -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">        -p 8888:8000 \\</span><br><span class=\"line\">        -p 8445:8443 \\</span><br><span class=\"line\">        -p 8889:8001 \\</span><br><span class=\"line\">        -p 8446:8444 \\</span><br><span class=\"line\">        kong:latest</span><br></pre></td></tr></table></figure>"},{"title":"在Docker中运行Jenkins","date":"2018-08-23T03:46:07.000Z","_content":"\n## 拉取jenkins镜像 ##\n\n```\ndocker pull jenkins\n```\n\n## 创建jenkins容器 ##\n\n```\ndocker run -p 18080:8080 -p 50000:50000 -v /usr/maven/apache-maven-3.5.3:/Users/xinzhang/Downloads/apache-maven-3.5.3 jenkins\n```","source":"_posts/docker-jenkins.md","raw":"---\ntitle: 在Docker中运行Jenkins\ndate: 2018-08-23 11:46:07\ntags:\n---\n\n## 拉取jenkins镜像 ##\n\n```\ndocker pull jenkins\n```\n\n## 创建jenkins容器 ##\n\n```\ndocker run -p 18080:8080 -p 50000:50000 -v /usr/maven/apache-maven-3.5.3:/Users/xinzhang/Downloads/apache-maven-3.5.3 jenkins\n```","slug":"docker-jenkins","published":1,"updated":"2018-08-25T09:13:31.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjxs0001tbwgw5t0jasf","content":"<h2 id=\"拉取jenkins镜像\"><a href=\"#拉取jenkins镜像\" class=\"headerlink\" title=\"拉取jenkins镜像\"></a>拉取jenkins镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull jenkins</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建jenkins容器\"><a href=\"#创建jenkins容器\" class=\"headerlink\" title=\"创建jenkins容器\"></a>创建jenkins容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 18080:8080 -p 50000:50000 -v /usr/maven/apache-maven-3.5.3:/Users/xinzhang/Downloads/apache-maven-3.5.3 jenkins</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"拉取jenkins镜像\"><a href=\"#拉取jenkins镜像\" class=\"headerlink\" title=\"拉取jenkins镜像\"></a>拉取jenkins镜像</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull jenkins</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建jenkins容器\"><a href=\"#创建jenkins容器\" class=\"headerlink\" title=\"创建jenkins容器\"></a>创建jenkins容器</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -p 18080:8080 -p 50000:50000 -v /usr/maven/apache-maven-3.5.3:/Users/xinzhang/Downloads/apache-maven-3.5.3 jenkins</span><br></pre></td></tr></table></figure>"},{"title":"利用GitHub搭建Hexo博客并开启HTTPS","_content":"**Hexo** 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n**GitHub** 是一个面向开源及私有软件项目的托管平台, \b它提供的 **GitHub Pages** 是一个静态站点托管服务，旨在直接从GitHub存储库托管个人、组织或项目页面。\n\n## 安装Hexo\n\n### 安装前提\n\n安装 Hexo 相当简单。然而在安装前，先检查是否已安装下列应用程序：\n\n- Node.js\n- Git\n\n如果您的电脑中已经安装上述必备程序，那么只需要使用 npm 即可完成 Hexo 的安装。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install （貌似不需要这步，执行init就会install了）\n```\n\n新建完成后，指定文件夹的目录如下：\n\n``` bash\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n## 开始\n\n### 写文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n### 本地运行服务\n\n``` bash\n$ hexo server\n```\n\n### 本地运行清除缓存\n\n``` bash\n$ hexo clean\n```\n\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n### 部署\n\n``` bash\n$ hexo publish \"My New Post\"\n$ hexo generate --deploy\n```\n\n> - $ hexo publish 发表草稿\n> - $ hexo g -d 文件生成后立即部署网站\n\n** 如果使用Git服务存放，在执行部署前需要\b先安装 hexo-deployer-git **\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\n修改网站根目录下的_config.yml配置:\n\n``` bash\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n``` \n\n| 参数\t|  描述 | \n| :--------  | :-----  |\n| repo | 库（Repository）地址 | \n| branch | \t分支名称 | \n\n## 自定义域名\n\n### 域名解析\n\n开启 Github Pages，创建一个命名为：username.github.io 的资源库，这里的username就是你的用户名。如果想使用自定义域名需要在域名解析管理新增 CNAME 解析：\n\n| 记录类型    | 主机记录   |  记录值  |\n| :--------:  | :-----:  | :----:  |\n| CNAME     |   @     | username.github.io    |\n| CNAME     |   www   | username.github.io    |\n\n### GitHub Pages 配置\n\n完成域名解析后还需要在 GitHub Pages 仓库根目录下创建CNAME文件，文件内容为自定义的域名，例如：hellozhang.xin\n\n### GitHub Pages 开启HTTPS：\n\n- 在 GitHub Pages 存储库的主页面下，单击设置。\n\n![Repository settings button](https://help.github.com/assets/images/help/repository/repo-actions-settings.png)\n\n- 在“GitHub页面”下，选择强制HTTPS。\n\n![Enforce HTTPS checkbox](https://help.github.com/assets/images/help/pages/enforce-https-checkbox.png)\n\n> 如果\b使用Chrome浏览器未能在地址栏出现 **绿色小锁** 或出现小叹号提示网站与建立完全安全的链接，请检查自己的网站引用的资源文件有没有使用了 http 协议，请替换成相应的 https 资源。可通过F12开发者工具检查。\n\n| Asset type\t    | HTTP   |  HTTPS  |\n| :--------:  | :-----:  | :----:  |\n| CSS | <link rel=”stylesheet” href=”http://example.com/css/main.css\"> | <link rel=”stylesheet” href=”https://example.com/css/main.css\"> |\n| JavaScript | <script type=”text/javascript” src=”http://example.com/js/main.js\"></script>\t| <script type=”text/javascript” src=”https://example.com/js/main.js\"></script> |\n| Image |  <A HREF=”http://www.somesite.com\"><IMG SRC=”http://www.example.com/logo.jpg\" alt=”Logo”></a>\t| <A HREF=”https://www.somesite.com\"><IMG SRC=”https://www.example.com/logo.jpg\" alt=”Logo”></a> |","source":"_posts/hexo-on-github-and-enable-https.md","raw":"---\ntitle: 利用GitHub搭建Hexo博客并开启HTTPS\n---\n**Hexo** 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。\n**GitHub** 是一个面向开源及私有软件项目的托管平台, \b它提供的 **GitHub Pages** 是一个静态站点托管服务，旨在直接从GitHub存储库托管个人、组织或项目页面。\n\n## 安装Hexo\n\n### 安装前提\n\n安装 Hexo 相当简单。然而在安装前，先检查是否已安装下列应用程序：\n\n- Node.js\n- Git\n\n如果您的电脑中已经安装上述必备程序，那么只需要使用 npm 即可完成 Hexo 的安装。\n\n``` bash\n$ npm install -g hexo-cli\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n``` bash\n$ hexo init <folder>\n$ cd <folder>\n$ npm install （貌似不需要这步，执行init就会install了）\n```\n\n新建完成后，指定文件夹的目录如下：\n\n``` bash\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n## 开始\n\n### 写文章\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\n如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。\n\n### 本地运行服务\n\n``` bash\n$ hexo server\n```\n\n### 本地运行清除缓存\n\n``` bash\n$ hexo clean\n```\n\n在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。\n\n### 部署\n\n``` bash\n$ hexo publish \"My New Post\"\n$ hexo generate --deploy\n```\n\n> - $ hexo publish 发表草稿\n> - $ hexo g -d 文件生成后立即部署网站\n\n** 如果使用Git服务存放，在执行部署前需要\b先安装 hexo-deployer-git **\n\n``` bash\n$ npm install hexo-deployer-git --save\n```\n\n修改网站根目录下的_config.yml配置:\n\n``` bash\ndeploy:\n  type: git\n  repo: <repository url>\n  branch: [branch]\n``` \n\n| 参数\t|  描述 | \n| :--------  | :-----  |\n| repo | 库（Repository）地址 | \n| branch | \t分支名称 | \n\n## 自定义域名\n\n### 域名解析\n\n开启 Github Pages，创建一个命名为：username.github.io 的资源库，这里的username就是你的用户名。如果想使用自定义域名需要在域名解析管理新增 CNAME 解析：\n\n| 记录类型    | 主机记录   |  记录值  |\n| :--------:  | :-----:  | :----:  |\n| CNAME     |   @     | username.github.io    |\n| CNAME     |   www   | username.github.io    |\n\n### GitHub Pages 配置\n\n完成域名解析后还需要在 GitHub Pages 仓库根目录下创建CNAME文件，文件内容为自定义的域名，例如：hellozhang.xin\n\n### GitHub Pages 开启HTTPS：\n\n- 在 GitHub Pages 存储库的主页面下，单击设置。\n\n![Repository settings button](https://help.github.com/assets/images/help/repository/repo-actions-settings.png)\n\n- 在“GitHub页面”下，选择强制HTTPS。\n\n![Enforce HTTPS checkbox](https://help.github.com/assets/images/help/pages/enforce-https-checkbox.png)\n\n> 如果\b使用Chrome浏览器未能在地址栏出现 **绿色小锁** 或出现小叹号提示网站与建立完全安全的链接，请检查自己的网站引用的资源文件有没有使用了 http 协议，请替换成相应的 https 资源。可通过F12开发者工具检查。\n\n| Asset type\t    | HTTP   |  HTTPS  |\n| :--------:  | :-----:  | :----:  |\n| CSS | <link rel=”stylesheet” href=”http://example.com/css/main.css\"> | <link rel=”stylesheet” href=”https://example.com/css/main.css\"> |\n| JavaScript | <script type=”text/javascript” src=”http://example.com/js/main.js\"></script>\t| <script type=”text/javascript” src=”https://example.com/js/main.js\"></script> |\n| Image |  <A HREF=”http://www.somesite.com\"><IMG SRC=”http://www.example.com/logo.jpg\" alt=”Logo”></a>\t| <A HREF=”https://www.somesite.com\"><IMG SRC=”https://www.example.com/logo.jpg\" alt=”Logo”></a> |","slug":"hexo-on-github-and-enable-https","published":1,"date":"2018-06-25T15:48:14.000Z","updated":"2019-07-26T08:42:44.057Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjxw0002tbwgu9177i7r","content":"<p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><strong>GitHub</strong> 是一个面向开源及私有软件项目的托管平台, \b它提供的 <strong>GitHub Pages</strong> 是一个静态站点托管服务，旨在直接从GitHub存储库托管个人、组织或项目页面。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，先检查是否已安装下列应用程序：</p>\n<ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<p>如果您的电脑中已经安装上述必备程序，那么只需要使用 npm 即可完成 Hexo 的安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install （貌似不需要这步，执行init就会install了）</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span></span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h3 id=\"本地运行服务\"><a href=\"#本地运行服务\" class=\"headerlink\" title=\"本地运行服务\"></a>本地运行服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地运行清除缓存\"><a href=\"#本地运行清除缓存\" class=\"headerlink\" title=\"本地运行清除缓存\"></a>本地运行清除缓存</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo generate --deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>$ hexo publish 发表草稿</li>\n<li>$ hexo g -d 文件生成后立即部署网站</li>\n</ul>\n</blockquote>\n<p><strong> 如果使用Git服务存放，在执行部署前需要\b先安装 hexo-deployer-git </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改网站根目录下的_config.yml配置:</p>\n<pre><code class=\"bash\">deploy:\n  <span class=\"built_in\">type</span>: git\n  repo: &lt;repository url&gt;\n  branch: [branch]\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">repo</td>\n<td style=\"text-align:left\">库（Repository）地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">branch</td>\n<td style=\"text-align:left\">分支名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h2><h3 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h3><p>开启 Github Pages，创建一个命名为：username.github.io 的资源库，这里的username就是你的用户名。如果想使用自定义域名需要在域名解析管理新增 CNAME 解析：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">记录类型</th>\n<th style=\"text-align:center\">主机记录</th>\n<th style=\"text-align:center\">记录值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CNAME</td>\n<td style=\"text-align:center\">@</td>\n<td style=\"text-align:center\">username.github.io</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CNAME</td>\n<td style=\"text-align:center\">www</td>\n<td style=\"text-align:center\">username.github.io</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"GitHub-Pages-配置\"><a href=\"#GitHub-Pages-配置\" class=\"headerlink\" title=\"GitHub Pages 配置\"></a>GitHub Pages 配置</h3><p>完成域名解析后还需要在 GitHub Pages 仓库根目录下创建CNAME文件，文件内容为自定义的域名，例如：hellozhang.xin</p>\n<h3 id=\"GitHub-Pages-开启HTTPS：\"><a href=\"#GitHub-Pages-开启HTTPS：\" class=\"headerlink\" title=\"GitHub Pages 开启HTTPS：\"></a>GitHub Pages 开启HTTPS：</h3><ul>\n<li>在 GitHub Pages 存储库的主页面下，单击设置。</li>\n</ul>\n<p><img src=\"https://help.github.com/assets/images/help/repository/repo-actions-settings.png\" alt=\"Repository settings button\"></p>\n<ul>\n<li>在“GitHub页面”下，选择强制HTTPS。</li>\n</ul>\n<p><img src=\"https://help.github.com/assets/images/help/pages/enforce-https-checkbox.png\" alt=\"Enforce HTTPS checkbox\"></p>\n<blockquote>\n<p>如果\b使用Chrome浏览器未能在地址栏出现 <strong>绿色小锁</strong> 或出现小叹号提示网站与建立完全安全的链接，请检查自己的网站引用的资源文件有没有使用了 http 协议，请替换成相应的 https 资源。可通过F12开发者工具检查。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Asset type</th>\n<th style=\"text-align:center\">HTTP</th>\n<th style=\"text-align:center\">HTTPS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CSS</td>\n<td style=\"text-align:center\">&lt;link rel=”stylesheet” href=”<a href=\"http://example.com/css/main.css&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://example.com/css/main.css&quot;&gt;</a></td>\n<td style=\"text-align:center\">&lt;link rel=”stylesheet” href=”<a href=\"https://example.com/css/main.css&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://example.com/css/main.css&quot;&gt;</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JavaScript</td>\n<td style=\"text-align:center\">&lt;script type=”text/javascript” src=”<a href=\"http://example.com/js/main.js&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://example.com/js/main.js&quot;&gt;</a></td>\n<td style=\"text-align:center\">&lt;script type=”text/javascript” src=”<a href=\"https://example.com/js/main.js&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://example.com/js/main.js&quot;&gt;</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Image</td>\n<td style=\"text-align:center\">&lt;A HREF=”<a href=\"http://www.somesite.com&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://www.somesite.com&quot;&gt;</a>&lt;IMG SRC=”<a href=\"http://www.example.com/logo.jpg&quot;\" target=\"_blank\" rel=\"noopener\">http://www.example.com/logo.jpg&quot;</a> alt=”Logo”&gt;</td>\n<td style=\"text-align:center\">&lt;A HREF=”<a href=\"https://www.somesite.com&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://www.somesite.com&quot;&gt;</a>&lt;IMG SRC=”<a href=\"https://www.example.com/logo.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://www.example.com/logo.jpg&quot;</a> alt=”Logo”&gt;</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Hexo</strong> 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><strong>GitHub</strong> 是一个面向开源及私有软件项目的托管平台, \b它提供的 <strong>GitHub Pages</strong> 是一个静态站点托管服务，旨在直接从GitHub存储库托管个人、组织或项目页面。</p>\n<h2 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h2><h3 id=\"安装前提\"><a href=\"#安装前提\" class=\"headerlink\" title=\"安装前提\"></a>安装前提</h3><p>安装 Hexo 相当简单。然而在安装前，先检查是否已安装下列应用程序：</p>\n<ul>\n<li>Node.js</li>\n<li>Git</li>\n</ul>\n<p>如果您的电脑中已经安装上述必备程序，那么只需要使用 npm 即可完成 Hexo 的安装。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo init &lt;folder&gt;</span><br><span class=\"line\">$ <span class=\"built_in\">cd</span> &lt;folder&gt;</span><br><span class=\"line\">$ npm install （貌似不需要这步，执行init就会install了）</span><br></pre></td></tr></table></figure>\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── <span class=\"built_in\">source</span></span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><h3 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p>\n<h3 id=\"本地运行服务\"><a href=\"#本地运行服务\" class=\"headerlink\" title=\"本地运行服务\"></a>本地运行服务</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<h3 id=\"本地运行清除缓存\"><a href=\"#本地运行清除缓存\" class=\"headerlink\" title=\"本地运行清除缓存\"></a>本地运行清除缓存</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo clean</span><br></pre></td></tr></table></figure>\n<p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo publish <span class=\"string\">\"My New Post\"</span></span><br><span class=\"line\">$ hexo generate --deploy</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>$ hexo publish 发表草稿</li>\n<li>$ hexo g -d 文件生成后立即部署网站</li>\n</ul>\n</blockquote>\n<p><strong> 如果使用Git服务存放，在执行部署前需要\b先安装 hexo-deployer-git </strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<p>修改网站根目录下的_config.yml配置:</p>\n<pre><code class=\"bash\">deploy:\n  <span class=\"built_in\">type</span>: git\n  repo: &lt;repository url&gt;\n  branch: [branch]\n</code></pre>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">repo</td>\n<td style=\"text-align:left\">库（Repository）地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">branch</td>\n<td style=\"text-align:left\">分支名称</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h2><h3 id=\"域名解析\"><a href=\"#域名解析\" class=\"headerlink\" title=\"域名解析\"></a>域名解析</h3><p>开启 Github Pages，创建一个命名为：username.github.io 的资源库，这里的username就是你的用户名。如果想使用自定义域名需要在域名解析管理新增 CNAME 解析：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">记录类型</th>\n<th style=\"text-align:center\">主机记录</th>\n<th style=\"text-align:center\">记录值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CNAME</td>\n<td style=\"text-align:center\">@</td>\n<td style=\"text-align:center\">username.github.io</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CNAME</td>\n<td style=\"text-align:center\">www</td>\n<td style=\"text-align:center\">username.github.io</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"GitHub-Pages-配置\"><a href=\"#GitHub-Pages-配置\" class=\"headerlink\" title=\"GitHub Pages 配置\"></a>GitHub Pages 配置</h3><p>完成域名解析后还需要在 GitHub Pages 仓库根目录下创建CNAME文件，文件内容为自定义的域名，例如：hellozhang.xin</p>\n<h3 id=\"GitHub-Pages-开启HTTPS：\"><a href=\"#GitHub-Pages-开启HTTPS：\" class=\"headerlink\" title=\"GitHub Pages 开启HTTPS：\"></a>GitHub Pages 开启HTTPS：</h3><ul>\n<li>在 GitHub Pages 存储库的主页面下，单击设置。</li>\n</ul>\n<p><img src=\"https://help.github.com/assets/images/help/repository/repo-actions-settings.png\" alt=\"Repository settings button\"></p>\n<ul>\n<li>在“GitHub页面”下，选择强制HTTPS。</li>\n</ul>\n<p><img src=\"https://help.github.com/assets/images/help/pages/enforce-https-checkbox.png\" alt=\"Enforce HTTPS checkbox\"></p>\n<blockquote>\n<p>如果\b使用Chrome浏览器未能在地址栏出现 <strong>绿色小锁</strong> 或出现小叹号提示网站与建立完全安全的链接，请检查自己的网站引用的资源文件有没有使用了 http 协议，请替换成相应的 https 资源。可通过F12开发者工具检查。</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Asset type</th>\n<th style=\"text-align:center\">HTTP</th>\n<th style=\"text-align:center\">HTTPS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CSS</td>\n<td style=\"text-align:center\">&lt;link rel=”stylesheet” href=”<a href=\"http://example.com/css/main.css&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://example.com/css/main.css&quot;&gt;</a></td>\n<td style=\"text-align:center\">&lt;link rel=”stylesheet” href=”<a href=\"https://example.com/css/main.css&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://example.com/css/main.css&quot;&gt;</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">JavaScript</td>\n<td style=\"text-align:center\">&lt;script type=”text/javascript” src=”<a href=\"http://example.com/js/main.js&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://example.com/js/main.js&quot;&gt;</a></td>\n<td style=\"text-align:center\">&lt;script type=”text/javascript” src=”<a href=\"https://example.com/js/main.js&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://example.com/js/main.js&quot;&gt;</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Image</td>\n<td style=\"text-align:center\">&lt;A HREF=”<a href=\"http://www.somesite.com&quot;&gt;\" target=\"_blank\" rel=\"noopener\">http://www.somesite.com&quot;&gt;</a>&lt;IMG SRC=”<a href=\"http://www.example.com/logo.jpg&quot;\" target=\"_blank\" rel=\"noopener\">http://www.example.com/logo.jpg&quot;</a> alt=”Logo”&gt;</td>\n<td style=\"text-align:center\">&lt;A HREF=”<a href=\"https://www.somesite.com&quot;&gt;\" target=\"_blank\" rel=\"noopener\">https://www.somesite.com&quot;&gt;</a>&lt;IMG SRC=”<a href=\"https://www.example.com/logo.jpg&quot;\" target=\"_blank\" rel=\"noopener\">https://www.example.com/logo.jpg&quot;</a> alt=”Logo”&gt;</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Docker安装","date":"2018-08-20T03:46:15.000Z","_content":"\n## 阿里云安装Docker\n\n### 系统要求\n\nDocker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。\n\n### 使用 yum 安装（CentOS 7下）\n\nstep 1: 安装必要的一些系统工具\n\n```\nsudo yum install -y yum-utils \\\n    device-mapper-persistent-data \\\n    lvm2\n```\n\nStep 2: 添加软件源信息\n\n```\nsudo yum-config-manager \\\n    --add-repo \\\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\nStep 3: 更新并安装Docker-CE\n\n```\nsudo yum makecache fast\nsudo yum -y install docker-ce\n```\n\nStep 4: 开启Docker服务\n\n```\nsudo service docker start\n```\n\n```\n# 注意：\n# 安装指定版本的Docker-CE:\n# Step 1: 查找Docker-CE的版本:\n# yum list docker-ce.x86_64 --showduplicates | sort -r\n#   Loading mirror speeds from cached hostfile\n#   Loaded plugins: branch, fastestmirror, langpacks\n#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\n#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable\n#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\n#   Available Packages\n# Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\n# sudo yum -y install docker-ce-[VERSION]\n```\n\n### 使用脚本自动安装\n\n在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，\nCentOS 系统上可以使用这套脚本安装：\n\n```\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n\n执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。\n\n## macOS安装Docker\n\n### 系统要求\n\n** Docker for Mac ** 要求系统最低为 macOS 10.10.3 Yosemite。如果系统不满足需求，可以安装 ** Docker Toolbox **。\n\n### 手动下载安装 ###\n\n如果需要手动安装，只需要下载 Docker for Mac。\n\n如同 macOS 其它软件一样，安装也非常简单，双击下载的 .dmg 文件，然后将那只叫 Moby 的鲸鱼图标拖拽到 Application 文件夹即可（其间需要输入用户密码）。\n\n## 安装校验\n\n```\n$ docker version\n\nClient:\nVersion:      17.03.0-ce\nAPI version:  1.26\nGo version:   go1.7.5\nGit commit:   3a232c8\nBuilt:        Tue Feb 28 07:52:04 2017\nOS/Arch:      linux/amd64\nServer:\nVersion:      17.03.0-ce\nAPI version:  1.26 (minimum version 1.12)\nGo version:   go1.7.5\nGit commit:   3a232c8\nBuilt:        Tue Feb 28 07:52:04 2017\nOS/Arch:      linux/amd64\nExperimental: false\n```\n\n若能正常输出以上信息，则说明安装成功。\n\n## 启动 Docker CE \n\n```\n$ sudo systemctl enable docker\n$ sudo systemctl start docker\n```\n\n## 删除 Docker CE\n\n执行以下命令来删除 Docker CE：\n\n```\n$ sudo yum remove docker-ce\n$ sudo rm -rf /var/lib/docker #\b默认安装路径\n```\n\n","source":"_posts/docker-install.md","raw":"---\ntitle: Docker安装\ndate: 2018-08-20 11:46:15\ntags:\n---\n\n## 阿里云安装Docker\n\n### 系统要求\n\nDocker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。\n\n### 使用 yum 安装（CentOS 7下）\n\nstep 1: 安装必要的一些系统工具\n\n```\nsudo yum install -y yum-utils \\\n    device-mapper-persistent-data \\\n    lvm2\n```\n\nStep 2: 添加软件源信息\n\n```\nsudo yum-config-manager \\\n    --add-repo \\\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n```\n\nStep 3: 更新并安装Docker-CE\n\n```\nsudo yum makecache fast\nsudo yum -y install docker-ce\n```\n\nStep 4: 开启Docker服务\n\n```\nsudo service docker start\n```\n\n```\n# 注意：\n# 安装指定版本的Docker-CE:\n# Step 1: 查找Docker-CE的版本:\n# yum list docker-ce.x86_64 --showduplicates | sort -r\n#   Loading mirror speeds from cached hostfile\n#   Loaded plugins: branch, fastestmirror, langpacks\n#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable\n#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable\n#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable\n#   Available Packages\n# Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)\n# sudo yum -y install docker-ce-[VERSION]\n```\n\n### 使用脚本自动安装\n\n在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，\nCentOS 系统上可以使用这套脚本安装：\n\n```\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n\n执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。\n\n## macOS安装Docker\n\n### 系统要求\n\n** Docker for Mac ** 要求系统最低为 macOS 10.10.3 Yosemite。如果系统不满足需求，可以安装 ** Docker Toolbox **。\n\n### 手动下载安装 ###\n\n如果需要手动安装，只需要下载 Docker for Mac。\n\n如同 macOS 其它软件一样，安装也非常简单，双击下载的 .dmg 文件，然后将那只叫 Moby 的鲸鱼图标拖拽到 Application 文件夹即可（其间需要输入用户密码）。\n\n## 安装校验\n\n```\n$ docker version\n\nClient:\nVersion:      17.03.0-ce\nAPI version:  1.26\nGo version:   go1.7.5\nGit commit:   3a232c8\nBuilt:        Tue Feb 28 07:52:04 2017\nOS/Arch:      linux/amd64\nServer:\nVersion:      17.03.0-ce\nAPI version:  1.26 (minimum version 1.12)\nGo version:   go1.7.5\nGit commit:   3a232c8\nBuilt:        Tue Feb 28 07:52:04 2017\nOS/Arch:      linux/amd64\nExperimental: false\n```\n\n若能正常输出以上信息，则说明安装成功。\n\n## 启动 Docker CE \n\n```\n$ sudo systemctl enable docker\n$ sudo systemctl start docker\n```\n\n## 删除 Docker CE\n\n执行以下命令来删除 Docker CE：\n\n```\n$ sudo yum remove docker-ce\n$ sudo rm -rf /var/lib/docker #\b默认安装路径\n```\n\n","slug":"docker-install","published":1,"updated":"2018-09-09T02:39:37.084Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjxz0003tbwgdpeja556","content":"<h2 id=\"阿里云安装Docker\"><a href=\"#阿里云安装Docker\" class=\"headerlink\" title=\"阿里云安装Docker\"></a>阿里云安装Docker</h2><h3 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h3><p>Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。</p>\n<h3 id=\"使用-yum-安装（CentOS-7下）\"><a href=\"#使用-yum-安装（CentOS-7下）\" class=\"headerlink\" title=\"使用 yum 安装（CentOS 7下）\"></a>使用 yum 安装（CentOS 7下）</h3><p>step 1: 安装必要的一些系统工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y yum-utils \\</span><br><span class=\"line\">    device-mapper-persistent-data \\</span><br><span class=\"line\">    lvm2</span><br></pre></td></tr></table></figure>\n<p>Step 2: 添加软件源信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<p>Step 3: 更新并安装Docker-CE</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum makecache fast</span><br><span class=\"line\">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure>\n<p>Step 4: 开启Docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker start</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 注意：</span><br><span class=\"line\"># 安装指定版本的Docker-CE:</span><br><span class=\"line\"># Step 1: 查找Docker-CE的版本:</span><br><span class=\"line\"># yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class=\"line\">#   Loading mirror speeds from cached hostfile</span><br><span class=\"line\">#   Loaded plugins: branch, fastestmirror, langpacks</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span><br><span class=\"line\">#   Available Packages</span><br><span class=\"line\"># Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)</span><br><span class=\"line\"># sudo yum -y install docker-ce-[VERSION]</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用脚本自动安装\"><a href=\"#使用脚本自动安装\" class=\"headerlink\" title=\"使用脚本自动安装\"></a>使用脚本自动安装</h3><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，<br>CentOS 系统上可以使用这套脚本安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class=\"line\">$ sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>\n<p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。</p>\n<h2 id=\"macOS安装Docker\"><a href=\"#macOS安装Docker\" class=\"headerlink\" title=\"macOS安装Docker\"></a>macOS安装Docker</h2><h3 id=\"系统要求-1\"><a href=\"#系统要求-1\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h3><p><strong> Docker for Mac </strong> 要求系统最低为 macOS 10.10.3 Yosemite。如果系统不满足需求，可以安装 <strong> Docker Toolbox </strong>。</p>\n<h3 id=\"手动下载安装\"><a href=\"#手动下载安装\" class=\"headerlink\" title=\"手动下载安装\"></a>手动下载安装</h3><p>如果需要手动安装，只需要下载 Docker for Mac。</p>\n<p>如同 macOS 其它软件一样，安装也非常简单，双击下载的 .dmg 文件，然后将那只叫 Moby 的鲸鱼图标拖拽到 Application 文件夹即可（其间需要输入用户密码）。</p>\n<h2 id=\"安装校验\"><a href=\"#安装校验\" class=\"headerlink\" title=\"安装校验\"></a>安装校验</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker version</span><br><span class=\"line\"></span><br><span class=\"line\">Client:</span><br><span class=\"line\">Version:      17.03.0-ce</span><br><span class=\"line\">API version:  1.26</span><br><span class=\"line\">Go version:   go1.7.5</span><br><span class=\"line\">Git commit:   3a232c8</span><br><span class=\"line\">Built:        Tue Feb 28 07:52:04 2017</span><br><span class=\"line\">OS/Arch:      linux/amd64</span><br><span class=\"line\">Server:</span><br><span class=\"line\">Version:      17.03.0-ce</span><br><span class=\"line\">API version:  1.26 (minimum version 1.12)</span><br><span class=\"line\">Go version:   go1.7.5</span><br><span class=\"line\">Git commit:   3a232c8</span><br><span class=\"line\">Built:        Tue Feb 28 07:52:04 2017</span><br><span class=\"line\">OS/Arch:      linux/amd64</span><br><span class=\"line\">Experimental: false</span><br></pre></td></tr></table></figure>\n<p>若能正常输出以上信息，则说明安装成功。</p>\n<h2 id=\"启动-Docker-CE\"><a href=\"#启动-Docker-CE\" class=\"headerlink\" title=\"启动 Docker CE\"></a>启动 Docker CE</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl enable docker</span><br><span class=\"line\">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除-Docker-CE\"><a href=\"#删除-Docker-CE\" class=\"headerlink\" title=\"删除 Docker CE\"></a>删除 Docker CE</h2><p>执行以下命令来删除 Docker CE：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum remove docker-ce</span><br><span class=\"line\">$ sudo rm -rf /var/lib/docker #\b默认安装路径</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"阿里云安装Docker\"><a href=\"#阿里云安装Docker\" class=\"headerlink\" title=\"阿里云安装Docker\"></a>阿里云安装Docker</h2><h3 id=\"系统要求\"><a href=\"#系统要求\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h3><p>Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。</p>\n<h3 id=\"使用-yum-安装（CentOS-7下）\"><a href=\"#使用-yum-安装（CentOS-7下）\" class=\"headerlink\" title=\"使用 yum 安装（CentOS 7下）\"></a>使用 yum 安装（CentOS 7下）</h3><p>step 1: 安装必要的一些系统工具</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum install -y yum-utils \\</span><br><span class=\"line\">    device-mapper-persistent-data \\</span><br><span class=\"line\">    lvm2</span><br></pre></td></tr></table></figure>\n<p>Step 2: 添加软件源信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum-config-manager \\</span><br><span class=\"line\">    --add-repo \\</span><br><span class=\"line\">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure>\n<p>Step 3: 更新并安装Docker-CE</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum makecache fast</span><br><span class=\"line\">sudo yum -y install docker-ce</span><br></pre></td></tr></table></figure>\n<p>Step 4: 开启Docker服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service docker start</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 注意：</span><br><span class=\"line\"># 安装指定版本的Docker-CE:</span><br><span class=\"line\"># Step 1: 查找Docker-CE的版本:</span><br><span class=\"line\"># yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class=\"line\">#   Loading mirror speeds from cached hostfile</span><br><span class=\"line\">#   Loaded plugins: branch, fastestmirror, langpacks</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span><br><span class=\"line\">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span><br><span class=\"line\">#   Available Packages</span><br><span class=\"line\"># Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)</span><br><span class=\"line\"># sudo yum -y install docker-ce-[VERSION]</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用脚本自动安装\"><a href=\"#使用脚本自动安装\" class=\"headerlink\" title=\"使用脚本自动安装\"></a>使用脚本自动安装</h3><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，<br>CentOS 系统上可以使用这套脚本安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -fsSL get.docker.com -o get-docker.sh</span><br><span class=\"line\">$ sudo sh get-docker.sh --mirror Aliyun</span><br></pre></td></tr></table></figure>\n<p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。</p>\n<h2 id=\"macOS安装Docker\"><a href=\"#macOS安装Docker\" class=\"headerlink\" title=\"macOS安装Docker\"></a>macOS安装Docker</h2><h3 id=\"系统要求-1\"><a href=\"#系统要求-1\" class=\"headerlink\" title=\"系统要求\"></a>系统要求</h3><p><strong> Docker for Mac </strong> 要求系统最低为 macOS 10.10.3 Yosemite。如果系统不满足需求，可以安装 <strong> Docker Toolbox </strong>。</p>\n<h3 id=\"手动下载安装\"><a href=\"#手动下载安装\" class=\"headerlink\" title=\"手动下载安装\"></a>手动下载安装</h3><p>如果需要手动安装，只需要下载 Docker for Mac。</p>\n<p>如同 macOS 其它软件一样，安装也非常简单，双击下载的 .dmg 文件，然后将那只叫 Moby 的鲸鱼图标拖拽到 Application 文件夹即可（其间需要输入用户密码）。</p>\n<h2 id=\"安装校验\"><a href=\"#安装校验\" class=\"headerlink\" title=\"安装校验\"></a>安装校验</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker version</span><br><span class=\"line\"></span><br><span class=\"line\">Client:</span><br><span class=\"line\">Version:      17.03.0-ce</span><br><span class=\"line\">API version:  1.26</span><br><span class=\"line\">Go version:   go1.7.5</span><br><span class=\"line\">Git commit:   3a232c8</span><br><span class=\"line\">Built:        Tue Feb 28 07:52:04 2017</span><br><span class=\"line\">OS/Arch:      linux/amd64</span><br><span class=\"line\">Server:</span><br><span class=\"line\">Version:      17.03.0-ce</span><br><span class=\"line\">API version:  1.26 (minimum version 1.12)</span><br><span class=\"line\">Go version:   go1.7.5</span><br><span class=\"line\">Git commit:   3a232c8</span><br><span class=\"line\">Built:        Tue Feb 28 07:52:04 2017</span><br><span class=\"line\">OS/Arch:      linux/amd64</span><br><span class=\"line\">Experimental: false</span><br></pre></td></tr></table></figure>\n<p>若能正常输出以上信息，则说明安装成功。</p>\n<h2 id=\"启动-Docker-CE\"><a href=\"#启动-Docker-CE\" class=\"headerlink\" title=\"启动 Docker CE\"></a>启动 Docker CE</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo systemctl enable docker</span><br><span class=\"line\">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"删除-Docker-CE\"><a href=\"#删除-Docker-CE\" class=\"headerlink\" title=\"删除 Docker CE\"></a>删除 Docker CE</h2><p>执行以下命令来删除 Docker CE：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo yum remove docker-ce</span><br><span class=\"line\">$ sudo rm -rf /var/lib/docker #\b默认安装路径</span><br></pre></td></tr></table></figure>\n"},{"title":"安装NexT主题","date":"2018-06-26T02:35:56.000Z","_content":"Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。\n\n### 下载主题包\n\n{% tabs ,1 %}\n<!-- tab 克隆最新版本 -->\n在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n\n{% codeblock %}\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n{% endcodeblock %}\n\n<!-- endtab -->\n<!-- tab 下载稳定版本 -->\n前往 NexT 版本 [发布页面](https://github.com/iissnan/hexo-theme-next/releases)。\n选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。例如，下载 v0.4.0 版本： \n![next-releases](https://theme-next.iissnan.com/uploads/five-minutes-setup/download-stable-version.png)\n解压所下载的压缩包至站点的 themes 目录下， 并将 解压后的文件夹名称（hexo-theme-next-0.4.0）更改为 next。\n<!-- endtab -->\n{% endtabs %}\n\n### 启用主题\n\n当 克隆/下载 完成后，打开 **站点配置文件**， 找到 theme 字段，注释掉默认的主题并将其值更改为 next。\n\n``` bash\n# theme: landscape\ntheme: next\n```\n\n启动 Hexo 本地站点，并开启调试模式（即加上 --debug），整个命令是 \n\n``` bash\nhexo s --debug。 \n```\n\n### 选择 Scheme\n\n\bNexT 提供三种不同风\b格主题方案：\n![NexT-Schemes](https://theme-next.iissnan.com/assets/img/NextSchemes3.png)\nScheme 的切换通过更改 **主题配置文件**，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。\n\n``` bash\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n\n","source":"_posts/install-the-next-theme.md","raw":"---\ntitle: 安装NexT主题\ndate: 2018-06-26 10:35:56\ntags:\n---\nHexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。\n\n### 下载主题包\n\n{% tabs ,1 %}\n<!-- tab 克隆最新版本 -->\n在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：\n\n{% codeblock %}\n$ cd your-hexo-site\n$ git clone https://github.com/iissnan/hexo-theme-next themes/next\n{% endcodeblock %}\n\n<!-- endtab -->\n<!-- tab 下载稳定版本 -->\n前往 NexT 版本 [发布页面](https://github.com/iissnan/hexo-theme-next/releases)。\n选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。例如，下载 v0.4.0 版本： \n![next-releases](https://theme-next.iissnan.com/uploads/five-minutes-setup/download-stable-version.png)\n解压所下载的压缩包至站点的 themes 目录下， 并将 解压后的文件夹名称（hexo-theme-next-0.4.0）更改为 next。\n<!-- endtab -->\n{% endtabs %}\n\n### 启用主题\n\n当 克隆/下载 完成后，打开 **站点配置文件**， 找到 theme 字段，注释掉默认的主题并将其值更改为 next。\n\n``` bash\n# theme: landscape\ntheme: next\n```\n\n启动 Hexo 本地站点，并开启调试模式（即加上 --debug），整个命令是 \n\n``` bash\nhexo s --debug。 \n```\n\n### 选择 Scheme\n\n\bNexT 提供三种不同风\b格主题方案：\n![NexT-Schemes](https://theme-next.iissnan.com/assets/img/NextSchemes3.png)\nScheme 的切换通过更改 **主题配置文件**，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。\n\n``` bash\n#scheme: Muse\n#scheme: Mist\n#scheme: Pisces\nscheme: Gemini\n```\n\n\n","slug":"install-the-next-theme","published":1,"updated":"2018-06-30T16:37:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjy10004tbwgtoz0xkqr","content":"<p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p>\n<h3 id=\"下载主题包\"><a href=\"#下载主题包\" class=\"headerlink\" title=\"下载主题包\"></a>下载主题包</h3><div class=\"tabs\" id=\"\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#-1\">克隆最新版本</a></li><li class=\"tab\"><a href=\"#-2\">下载稳定版本</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"-1\"><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a> themes/next</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"tab-pane\" id=\"-2\"><p>前往 NexT 版本 <a href=\"https://github.com/iissnan/hexo-theme-next/releases\" target=\"_blank\" rel=\"noopener\">发布页面</a>。<br>选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。例如，下载 v0.4.0 版本：<br><img src=\"https://theme-next.iissnan.com/uploads/five-minutes-setup/download-stable-version.png\" alt=\"next-releases\"><br>解压所下载的压缩包至站点的 themes 目录下， 并将 解压后的文件夹名称（hexo-theme-next-0.4.0）更改为 next。</p>\n</div></div></div>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 theme 字段，注释掉默认的主题并将其值更改为 next。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># theme: landscape</span></span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s --debug。</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择-Scheme\"><a href=\"#选择-Scheme\" class=\"headerlink\" title=\"选择 Scheme\"></a>选择 Scheme</h3><p>\bNexT 提供三种不同风\b格主题方案：<br><img src=\"https://theme-next.iissnan.com/assets/img/NextSchemes3.png\" alt=\"NexT-Schemes\"><br>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>Hexo 安装主题的方式非常简单，只需要将主题文件拷贝至站点目录的 themes 目录下， 然后修改下配置文件即可。</p>\n<h3 id=\"下载主题包\"><a href=\"#下载主题包\" class=\"headerlink\" title=\"下载主题包\"></a>下载主题包</h3><div class=\"tabs\" id=\"\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#-1\">克隆最新版本</a></li><li class=\"tab\"><a href=\"#-2\">下载稳定版本</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"-1\"><p>在终端窗口下，定位到 Hexo 站点目录下。使用 Git checkout 代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd your-hexo-site</span><br><span class=\"line\">$ git clone <a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">https://github.com/iissnan/hexo-theme-next</a> themes/next</span><br></pre></td></tr></table></figure>\n\n</div><div class=\"tab-pane\" id=\"-2\"><p>前往 NexT 版本 <a href=\"https://github.com/iissnan/hexo-theme-next/releases\" target=\"_blank\" rel=\"noopener\">发布页面</a>。<br>选择你所需要的版本，下载 Download 区域下的 Source Code (zip) 到本地。例如，下载 v0.4.0 版本：<br><img src=\"https://theme-next.iissnan.com/uploads/five-minutes-setup/download-stable-version.png\" alt=\"next-releases\"><br>解压所下载的压缩包至站点的 themes 目录下， 并将 解压后的文件夹名称（hexo-theme-next-0.4.0）更改为 next。</p>\n</div></div></div>\n<h3 id=\"启用主题\"><a href=\"#启用主题\" class=\"headerlink\" title=\"启用主题\"></a>启用主题</h3><p>当 克隆/下载 完成后，打开 <strong>站点配置文件</strong>， 找到 theme 字段，注释掉默认的主题并将其值更改为 next。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># theme: landscape</span></span><br><span class=\"line\">theme: next</span><br></pre></td></tr></table></figure>\n<p>启动 Hexo 本地站点，并开启调试模式（即加上 –debug），整个命令是 </p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s --debug。</span><br></pre></td></tr></table></figure>\n<h3 id=\"选择-Scheme\"><a href=\"#选择-Scheme\" class=\"headerlink\" title=\"选择 Scheme\"></a>选择 Scheme</h3><p>\bNexT 提供三种不同风\b格主题方案：<br><img src=\"https://theme-next.iissnan.com/assets/img/NextSchemes3.png\" alt=\"NexT-Schemes\"><br>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 # 去除即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Pisces</span></span><br><span class=\"line\">scheme: Gemini</span><br></pre></td></tr></table></figure>\n"},{"title":"安装JDK-Maven-node","date":"2018-06-26T02:35:56.000Z","_content":"\n\n## 安装JDK\n```\nyum install java\n```\n\n查看安装目录\n```\n# ls -lrt /usr/bin/java\n/usr/bin/java -> /etc/alternatives/java\n# ls -lrt /etc/alternatives/java\n/etc/alternatives/java -> /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64/jre/bin/java\n# cd /usr/lib/jvm\n# ls\njava-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64\njre -> /etc/alternatives/jre\njre-1.8.0 -> /etc/alternatives/jre_1.8.0\njre-1.8.0-openjdk -> /etc/alternatives/jre_1.8.0_openjdk\njre-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64 -> java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre\njre-openjdk -> /etc/alternatives/jre_openjdk\n```\n\n添加到PATH\n```\n# export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk\n```\n\n## 安装maven\n```\n# wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz\n# tar xzvf apache-maven-3.6.1-bin.tar.gz\n```\n\nAdding to PATH\n```\nexport PATH=/root/apache-maven-3.6.1/bin:$PATH\n```\n\n## 安装mysql\n下载并安装MySQL官方的 Yum Repository\n```\n# wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\n# yum -y install mysql57-community-release-el7-10.noarch.rpm\n# yum -y install mysql-community-server\n```\n\n首先启动MySQL\n```\n# sudo systemctl start mysqld.service\n```\n\n查看MySQL运行状态\n```\n# sudo systemctl status mysqld.service\n```\n\n但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉：\n```\n# yum -y remove mysql57-community-release-el7-10.noarch\n```\n\n查看初始密码\n```\n# grep \"password\" /var/log/mysqld.log\n```\n\n修改密码\n```\nALTER USER 'root'@'localhost' IDENTIFIED BY 'z?guwrBhH7p>';\n```\n\n开放权限\n```\ngrant all on *.* to root@'%' identified by 'z?guwrBhH7p>';\nflush privileges;\n```\n\n## 安装nginx\n```\n# yum install nginx\n# service nginx start\n# service nginx stop\n# service nginx restart\n```\n\n查看nginx安装目录\n```\n# ps -ef | grep nginx\n# find /|grep nginx.conf\n```","source":"_posts/install-jdk-maven-node.md","raw":"---\ntitle: 安装JDK-Maven-node\ndate: 2018-06-26 10:35:56\ntags:\n---\n\n\n## 安装JDK\n```\nyum install java\n```\n\n查看安装目录\n```\n# ls -lrt /usr/bin/java\n/usr/bin/java -> /etc/alternatives/java\n# ls -lrt /etc/alternatives/java\n/etc/alternatives/java -> /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64/jre/bin/java\n# cd /usr/lib/jvm\n# ls\njava-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64\njre -> /etc/alternatives/jre\njre-1.8.0 -> /etc/alternatives/jre_1.8.0\njre-1.8.0-openjdk -> /etc/alternatives/jre_1.8.0_openjdk\njre-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64 -> java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre\njre-openjdk -> /etc/alternatives/jre_openjdk\n```\n\n添加到PATH\n```\n# export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk\n```\n\n## 安装maven\n```\n# wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz\n# tar xzvf apache-maven-3.6.1-bin.tar.gz\n```\n\nAdding to PATH\n```\nexport PATH=/root/apache-maven-3.6.1/bin:$PATH\n```\n\n## 安装mysql\n下载并安装MySQL官方的 Yum Repository\n```\n# wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm\n# yum -y install mysql57-community-release-el7-10.noarch.rpm\n# yum -y install mysql-community-server\n```\n\n首先启动MySQL\n```\n# sudo systemctl start mysqld.service\n```\n\n查看MySQL运行状态\n```\n# sudo systemctl status mysqld.service\n```\n\n但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉：\n```\n# yum -y remove mysql57-community-release-el7-10.noarch\n```\n\n查看初始密码\n```\n# grep \"password\" /var/log/mysqld.log\n```\n\n修改密码\n```\nALTER USER 'root'@'localhost' IDENTIFIED BY 'z?guwrBhH7p>';\n```\n\n开放权限\n```\ngrant all on *.* to root@'%' identified by 'z?guwrBhH7p>';\nflush privileges;\n```\n\n## 安装nginx\n```\n# yum install nginx\n# service nginx start\n# service nginx stop\n# service nginx restart\n```\n\n查看nginx安装目录\n```\n# ps -ef | grep nginx\n# find /|grep nginx.conf\n```","slug":"install-jdk-maven-node","published":1,"updated":"2019-06-10T06:43:38.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjy20005tbwgxj84xcsr","content":"<h2 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install java</span><br></pre></td></tr></table></figure>\n<p>查看安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ls -lrt /usr/bin/java</span><br><span class=\"line\">/usr/bin/java -&gt; /etc/alternatives/java</span><br><span class=\"line\"># ls -lrt /etc/alternatives/java</span><br><span class=\"line\">/etc/alternatives/java -&gt; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64/jre/bin/java</span><br><span class=\"line\"># cd /usr/lib/jvm</span><br><span class=\"line\"># ls</span><br><span class=\"line\">java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64</span><br><span class=\"line\">jre -&gt; /etc/alternatives/jre</span><br><span class=\"line\">jre-1.8.0 -&gt; /etc/alternatives/jre_1.8.0</span><br><span class=\"line\">jre-1.8.0-openjdk -&gt; /etc/alternatives/jre_1.8.0_openjdk</span><br><span class=\"line\">jre-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64 -&gt; java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre</span><br><span class=\"line\">jre-openjdk -&gt; /etc/alternatives/jre_openjdk</span><br></pre></td></tr></table></figure></p>\n<p>添加到PATH<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装maven\"><a href=\"#安装maven\" class=\"headerlink\" title=\"安装maven\"></a>安装maven</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz</span><br><span class=\"line\"># tar xzvf apache-maven-3.6.1-bin.tar.gz</span><br></pre></td></tr></table></figure>\n<p>Adding to PATH<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/root/apache-maven-3.6.1/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><p>下载并安装MySQL官方的 Yum Repository<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class=\"line\"># yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class=\"line\"># yum -y install mysql-community-server</span><br></pre></td></tr></table></figure></p>\n<p>首先启动MySQL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo systemctl start mysqld.service</span><br></pre></td></tr></table></figure></p>\n<p>查看MySQL运行状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo systemctl status mysqld.service</span><br></pre></td></tr></table></figure></p>\n<p>但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum -y remove mysql57-community-release-el7-10.noarch</span><br></pre></td></tr></table></figure></p>\n<p>查看初始密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure></p>\n<p>修改密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;z?guwrBhH7p&gt;&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>开放权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all on *.* to root@&apos;%&apos; identified by &apos;z?guwrBhH7p&gt;&apos;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装nginx\"><a href=\"#安装nginx\" class=\"headerlink\" title=\"安装nginx\"></a>安装nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum install nginx</span><br><span class=\"line\"># service nginx start</span><br><span class=\"line\"># service nginx stop</span><br><span class=\"line\"># service nginx restart</span><br></pre></td></tr></table></figure>\n<p>查看nginx安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ps -ef | grep nginx</span><br><span class=\"line\"># find /|grep nginx.conf</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install java</span><br></pre></td></tr></table></figure>\n<p>查看安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ls -lrt /usr/bin/java</span><br><span class=\"line\">/usr/bin/java -&gt; /etc/alternatives/java</span><br><span class=\"line\"># ls -lrt /etc/alternatives/java</span><br><span class=\"line\">/etc/alternatives/java -&gt; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.161-0.b14.el7_4.x86_64/jre/bin/java</span><br><span class=\"line\"># cd /usr/lib/jvm</span><br><span class=\"line\"># ls</span><br><span class=\"line\">java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64</span><br><span class=\"line\">jre -&gt; /etc/alternatives/jre</span><br><span class=\"line\">jre-1.8.0 -&gt; /etc/alternatives/jre_1.8.0</span><br><span class=\"line\">jre-1.8.0-openjdk -&gt; /etc/alternatives/jre_1.8.0_openjdk</span><br><span class=\"line\">jre-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64 -&gt; java-1.8.0-openjdk-1.8.0.212.b04-0.el7_6.x86_64/jre</span><br><span class=\"line\">jre-openjdk -&gt; /etc/alternatives/jre_openjdk</span><br></pre></td></tr></table></figure></p>\n<p>添加到PATH<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># export JAVA_HOME=/usr/lib/jvm/jre-1.8.0-openjdk</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装maven\"><a href=\"#安装maven\" class=\"headerlink\" title=\"安装maven\"></a>安装maven</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget http://mirror.bit.edu.cn/apache/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.tar.gz</span><br><span class=\"line\"># tar xzvf apache-maven-3.6.1-bin.tar.gz</span><br></pre></td></tr></table></figure>\n<p>Adding to PATH<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/root/apache-maven-3.6.1/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h2><p>下载并安装MySQL官方的 Yum Repository<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br><span class=\"line\"># yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class=\"line\"># yum -y install mysql-community-server</span><br></pre></td></tr></table></figure></p>\n<p>首先启动MySQL<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo systemctl start mysqld.service</span><br></pre></td></tr></table></figure></p>\n<p>查看MySQL运行状态<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo systemctl status mysqld.service</span><br></pre></td></tr></table></figure></p>\n<p>但此时还有一个问题，就是因为安装了Yum Repository，以后每次yum操作都会自动更新，需要把这个卸载掉：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum -y remove mysql57-community-release-el7-10.noarch</span><br></pre></td></tr></table></figure></p>\n<p>查看初始密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure></p>\n<p>修改密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;z?guwrBhH7p&gt;&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>开放权限<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant all on *.* to root@&apos;%&apos; identified by &apos;z?guwrBhH7p&gt;&apos;;</span><br><span class=\"line\">flush privileges;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装nginx\"><a href=\"#安装nginx\" class=\"headerlink\" title=\"安装nginx\"></a>安装nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># yum install nginx</span><br><span class=\"line\"># service nginx start</span><br><span class=\"line\"># service nginx stop</span><br><span class=\"line\"># service nginx restart</span><br></pre></td></tr></table></figure>\n<p>查看nginx安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ps -ef | grep nginx</span><br><span class=\"line\"># find /|grep nginx.conf</span><br></pre></td></tr></table></figure></p>\n"},{"title":"kong使用docker安装","date":"2018-08-30T08:04:42.000Z","_content":"\n## Kong\n\nKong 是在客户端和（微）服务间转发API通信的API网关。 Kong 可以通过插件扩展已有功能，这些插件在 API 请求响应循环的生命周期中被执行。插件使用 Lua 编写，而且 Kong 还有如下几个基础功能：HTTP 基本认证、密钥认证、CORS（ Cross-origin Resource Sharing，跨域资源共享）、TCP、UDP、文件日志、API 请求限流、请求转发以及 nginx 监控。\n\n## 根据官网提供的脚本和步骤进行安装\n\n1.创建一个自定义网络，允许容器发现并相互通信。在这个例子中，kong-net是网络名称，可以使用任何名称:\n\n```\ndocker network create kong-net\n```\n\n2.如果希望使用 PostgreSQL 容器：\n\n```\ndocker run -d --name kong-database \\\n    --network=kong-net \\\n    -p 15432:5432 \\\n    -e \"POSTGRES_USER=kong\" \\\n    -e \"POSTGRES_DB=kong\" \\\n    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间\n    postgres:9.6\n```\n\n3.准备数据库:\n\n```\ndocker run --rm \\\n    --network=kong-net \\\n    -e \"KONG_DATABASE=postgres\" \\\n    -e \"KONG_PG_HOST=kong-database\" \\\n    -e \"KONG_CASSANDRA_CONTACT_POINTS=kong-database\" \\\n    kong kong migrations up\n```\n\n4.启动一个连接数据库容器的kong容器:\n\n```\ndocker run -d --name kong \\\n    --network=kong-net \\\n    -e \"KONG_DATABASE=postgres\" \\\n    -e \"KONG_PG_HOST=kong-database\" \\\n    -e \"KONG_CASSANDRA_CONTACT_POINTS=kong-database\" \\\n    -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n    -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n    -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n    -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n    -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" \\\n    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间\n    -p 18000:8000 \\\n    -p 18443:8443 \\\n    -p 18001:8001 \\\n    -p 18444:8444 \\\n    kong\n```\n\n如果出现：\n\n```\nError: could not prepare Kong prefix at /usr/local/kong: nginx configuration is invalid (exit code 1):\nnginx: the configuration file /usr/local/kong/nginx.conf syntax is ok\nnginx: [alert] mmap(MAP_ANON|MAP_SHARED, 134217728) failed (12: Out of memory)\nnginx: configuration file /usr/local/kong/nginx.conf test failed\n```\n\n则使用：\n\n```\nsudo docker run -d --name kong \\\n    ...\n```\n\n\n测试\n\n```\n$ curl -i http://localhost:8001/\n```\n\n### kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本\n\n```\n$ docker run --rm -p 8080:8080 pgbi/kong-dashboard start --kong-url http://kong-ip:8001\n```\n\n### pg管理后台\ndocker run -p 10080:80 \\\n--link kong-database:kong-database \\\n-e \"PGADMIN_DEFAULT_EMAIL=user@domain.com\" \\\n-e \"PGADMIN_DEFAULT_PASSWORD=SuperSecret\" \\\n-d dpage/pgadmin4","source":"_posts/kong-docker-install.md","raw":"---\ntitle: kong使用docker安装\ndate: 2018-08-30 16:04:42\ntags:\n---\n\n## Kong\n\nKong 是在客户端和（微）服务间转发API通信的API网关。 Kong 可以通过插件扩展已有功能，这些插件在 API 请求响应循环的生命周期中被执行。插件使用 Lua 编写，而且 Kong 还有如下几个基础功能：HTTP 基本认证、密钥认证、CORS（ Cross-origin Resource Sharing，跨域资源共享）、TCP、UDP、文件日志、API 请求限流、请求转发以及 nginx 监控。\n\n## 根据官网提供的脚本和步骤进行安装\n\n1.创建一个自定义网络，允许容器发现并相互通信。在这个例子中，kong-net是网络名称，可以使用任何名称:\n\n```\ndocker network create kong-net\n```\n\n2.如果希望使用 PostgreSQL 容器：\n\n```\ndocker run -d --name kong-database \\\n    --network=kong-net \\\n    -p 15432:5432 \\\n    -e \"POSTGRES_USER=kong\" \\\n    -e \"POSTGRES_DB=kong\" \\\n    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间\n    postgres:9.6\n```\n\n3.准备数据库:\n\n```\ndocker run --rm \\\n    --network=kong-net \\\n    -e \"KONG_DATABASE=postgres\" \\\n    -e \"KONG_PG_HOST=kong-database\" \\\n    -e \"KONG_CASSANDRA_CONTACT_POINTS=kong-database\" \\\n    kong kong migrations up\n```\n\n4.启动一个连接数据库容器的kong容器:\n\n```\ndocker run -d --name kong \\\n    --network=kong-net \\\n    -e \"KONG_DATABASE=postgres\" \\\n    -e \"KONG_PG_HOST=kong-database\" \\\n    -e \"KONG_CASSANDRA_CONTACT_POINTS=kong-database\" \\\n    -e \"KONG_PROXY_ACCESS_LOG=/dev/stdout\" \\\n    -e \"KONG_ADMIN_ACCESS_LOG=/dev/stdout\" \\\n    -e \"KONG_PROXY_ERROR_LOG=/dev/stderr\" \\\n    -e \"KONG_ADMIN_ERROR_LOG=/dev/stderr\" \\\n    -e \"KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl\" \\\n    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间\n    -p 18000:8000 \\\n    -p 18443:8443 \\\n    -p 18001:8001 \\\n    -p 18444:8444 \\\n    kong\n```\n\n如果出现：\n\n```\nError: could not prepare Kong prefix at /usr/local/kong: nginx configuration is invalid (exit code 1):\nnginx: the configuration file /usr/local/kong/nginx.conf syntax is ok\nnginx: [alert] mmap(MAP_ANON|MAP_SHARED, 134217728) failed (12: Out of memory)\nnginx: configuration file /usr/local/kong/nginx.conf test failed\n```\n\n则使用：\n\n```\nsudo docker run -d --name kong \\\n    ...\n```\n\n\n测试\n\n```\n$ curl -i http://localhost:8001/\n```\n\n### kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本\n\n```\n$ docker run --rm -p 8080:8080 pgbi/kong-dashboard start --kong-url http://kong-ip:8001\n```\n\n### pg管理后台\ndocker run -p 10080:80 \\\n--link kong-database:kong-database \\\n-e \"PGADMIN_DEFAULT_EMAIL=user@domain.com\" \\\n-e \"PGADMIN_DEFAULT_PASSWORD=SuperSecret\" \\\n-d dpage/pgadmin4","slug":"kong-docker-install","published":1,"updated":"2018-10-19T06:34:32.768Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjy60006tbwgphlvtod7","content":"<h2 id=\"Kong\"><a href=\"#Kong\" class=\"headerlink\" title=\"Kong\"></a>Kong</h2><p>Kong 是在客户端和（微）服务间转发API通信的API网关。 Kong 可以通过插件扩展已有功能，这些插件在 API 请求响应循环的生命周期中被执行。插件使用 Lua 编写，而且 Kong 还有如下几个基础功能：HTTP 基本认证、密钥认证、CORS（ Cross-origin Resource Sharing，跨域资源共享）、TCP、UDP、文件日志、API 请求限流、请求转发以及 nginx 监控。</p>\n<h2 id=\"根据官网提供的脚本和步骤进行安装\"><a href=\"#根据官网提供的脚本和步骤进行安装\" class=\"headerlink\" title=\"根据官网提供的脚本和步骤进行安装\"></a>根据官网提供的脚本和步骤进行安装</h2><p>1.创建一个自定义网络，允许容器发现并相互通信。在这个例子中，kong-net是网络名称，可以使用任何名称:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create kong-net</span><br></pre></td></tr></table></figure>\n<p>2.如果希望使用 PostgreSQL 容器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong-database \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -p 15432:5432 \\</span><br><span class=\"line\">    -e &quot;POSTGRES_USER=kong&quot; \\</span><br><span class=\"line\">    -e &quot;POSTGRES_DB=kong&quot; \\</span><br><span class=\"line\">    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间</span><br><span class=\"line\">    postgres:9.6</span><br></pre></td></tr></table></figure>\n<p>3.准备数据库:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_CASSANDRA_CONTACT_POINTS=kong-database&quot; \\</span><br><span class=\"line\">    kong kong migrations up</span><br></pre></td></tr></table></figure>\n<p>4.启动一个连接数据库容器的kong容器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_CASSANDRA_CONTACT_POINTS=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; \\</span><br><span class=\"line\">    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间</span><br><span class=\"line\">    -p 18000:8000 \\</span><br><span class=\"line\">    -p 18443:8443 \\</span><br><span class=\"line\">    -p 18001:8001 \\</span><br><span class=\"line\">    -p 18444:8444 \\</span><br><span class=\"line\">    kong</span><br></pre></td></tr></table></figure>\n<p>如果出现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: could not prepare Kong prefix at /usr/local/kong: nginx configuration is invalid (exit code 1):</span><br><span class=\"line\">nginx: the configuration file /usr/local/kong/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: [alert] mmap(MAP_ANON|MAP_SHARED, 134217728) failed (12: Out of memory)</span><br><span class=\"line\">nginx: configuration file /usr/local/kong/nginx.conf test failed</span><br></pre></td></tr></table></figure>\n<p>则使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name kong \\</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n<p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -i http://localhost:8001/</span><br></pre></td></tr></table></figure>\n<h3 id=\"kong-dashboard-要配合-kong-的版本，因此上面kong使用0-13版本\"><a href=\"#kong-dashboard-要配合-kong-的版本，因此上面kong使用0-13版本\" class=\"headerlink\" title=\"kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本\"></a>kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --rm -p 8080:8080 pgbi/kong-dashboard start --kong-url http://kong-ip:8001</span><br></pre></td></tr></table></figure>\n<h3 id=\"pg管理后台\"><a href=\"#pg管理后台\" class=\"headerlink\" title=\"pg管理后台\"></a>pg管理后台</h3><p>docker run -p 10080:80 \\<br>–link kong-database:kong-database \\<br>-e “<a href=\"mailto:PGADMIN_DEFAULT_EMAIL=user@domain.com\" target=\"_blank\" rel=\"noopener\">PGADMIN_DEFAULT_EMAIL=user@domain.com</a>“ \\<br>-e “PGADMIN_DEFAULT_PASSWORD=SuperSecret” \\<br>-d dpage/pgadmin4</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Kong\"><a href=\"#Kong\" class=\"headerlink\" title=\"Kong\"></a>Kong</h2><p>Kong 是在客户端和（微）服务间转发API通信的API网关。 Kong 可以通过插件扩展已有功能，这些插件在 API 请求响应循环的生命周期中被执行。插件使用 Lua 编写，而且 Kong 还有如下几个基础功能：HTTP 基本认证、密钥认证、CORS（ Cross-origin Resource Sharing，跨域资源共享）、TCP、UDP、文件日志、API 请求限流、请求转发以及 nginx 监控。</p>\n<h2 id=\"根据官网提供的脚本和步骤进行安装\"><a href=\"#根据官网提供的脚本和步骤进行安装\" class=\"headerlink\" title=\"根据官网提供的脚本和步骤进行安装\"></a>根据官网提供的脚本和步骤进行安装</h2><p>1.创建一个自定义网络，允许容器发现并相互通信。在这个例子中，kong-net是网络名称，可以使用任何名称:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create kong-net</span><br></pre></td></tr></table></figure>\n<p>2.如果希望使用 PostgreSQL 容器：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong-database \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -p 15432:5432 \\</span><br><span class=\"line\">    -e &quot;POSTGRES_USER=kong&quot; \\</span><br><span class=\"line\">    -e &quot;POSTGRES_DB=kong&quot; \\</span><br><span class=\"line\">    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间</span><br><span class=\"line\">    postgres:9.6</span><br></pre></td></tr></table></figure>\n<p>3.准备数据库:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --rm \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_CASSANDRA_CONTACT_POINTS=kong-database&quot; \\</span><br><span class=\"line\">    kong kong migrations up</span><br></pre></td></tr></table></figure>\n<p>4.启动一个连接数据库容器的kong容器:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name kong \\</span><br><span class=\"line\">    --network=kong-net \\</span><br><span class=\"line\">    -e &quot;KONG_DATABASE=postgres&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PG_HOST=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_CASSANDRA_CONTACT_POINTS=kong-database&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PROXY_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_ACCESS_LOG=/dev/stdout&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_PROXY_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_ERROR_LOG=/dev/stderr&quot; \\</span><br><span class=\"line\">    -e &quot;KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl&quot; \\</span><br><span class=\"line\">    -v /etc/localtime:/etc/localtime:ro \\ # 同步宿主机时间</span><br><span class=\"line\">    -p 18000:8000 \\</span><br><span class=\"line\">    -p 18443:8443 \\</span><br><span class=\"line\">    -p 18001:8001 \\</span><br><span class=\"line\">    -p 18444:8444 \\</span><br><span class=\"line\">    kong</span><br></pre></td></tr></table></figure>\n<p>如果出现：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: could not prepare Kong prefix at /usr/local/kong: nginx configuration is invalid (exit code 1):</span><br><span class=\"line\">nginx: the configuration file /usr/local/kong/nginx.conf syntax is ok</span><br><span class=\"line\">nginx: [alert] mmap(MAP_ANON|MAP_SHARED, 134217728) failed (12: Out of memory)</span><br><span class=\"line\">nginx: configuration file /usr/local/kong/nginx.conf test failed</span><br></pre></td></tr></table></figure>\n<p>则使用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo docker run -d --name kong \\</span><br><span class=\"line\">    ...</span><br></pre></td></tr></table></figure>\n<p>测试</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl -i http://localhost:8001/</span><br></pre></td></tr></table></figure>\n<h3 id=\"kong-dashboard-要配合-kong-的版本，因此上面kong使用0-13版本\"><a href=\"#kong-dashboard-要配合-kong-的版本，因此上面kong使用0-13版本\" class=\"headerlink\" title=\"kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本\"></a>kong-dashboard 要配合 kong 的版本，因此上面kong使用0.13版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ docker run --rm -p 8080:8080 pgbi/kong-dashboard start --kong-url http://kong-ip:8001</span><br></pre></td></tr></table></figure>\n<h3 id=\"pg管理后台\"><a href=\"#pg管理后台\" class=\"headerlink\" title=\"pg管理后台\"></a>pg管理后台</h3><p>docker run -p 10080:80 \\<br>–link kong-database:kong-database \\<br>-e “<a href=\"mailto:PGADMIN_DEFAULT_EMAIL=user@domain.com\" target=\"_blank\" rel=\"noopener\">PGADMIN_DEFAULT_EMAIL=user@domain.com</a>“ \\<br>-e “PGADMIN_DEFAULT_PASSWORD=SuperSecret” \\<br>-d dpage/pgadmin4</p>\n"},{"title":"navicat-premium-import-tables","date":"2018-08-01T12:53:18.000Z","_content":"","source":"_posts/navicat-premium-import-tables.md","raw":"---\ntitle: navicat-premium-import-tables\ndate: 2018-08-01 20:53:18\ntags:\n---\n","slug":"navicat-premium-import-tables","published":1,"updated":"2018-08-01T12:53:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjy80007tbwgmd7xs8t4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"springcloud-gateway-nacos-dynamic-routing","date":"2020-03-11T13:01:51.000Z","_content":"\n## nacos 发布配置\n\n- 通过nacos提供的SDK或直接调用OPENAPI方式发布配置\n- 发布配置注意多个路由放在一个配置中，而不是一个路由创建一个配置\n\n## gateway 监听nacos下发的配置\n\n- 使用框架提供的动态路由方法，必须使用blade-gateway-dev.json\n\n```\n[\n    {\n    \"id\": \"example-list\",\n    \"order\": 0,\n    \"predicates\": [\n                {\n                    \"name\": \"Path\",\n                    \"args\": {\n                        \"pattern\": \"/api/football/match/list\"\n                    }\n                }\n            ],\n            \"filters\": [\n            ],\n    \"uri\": \"lb://ltb-api\"\n    },\n]\n```\n## ","source":"_posts/springcloud-gateway-nacos-dynamic-routing.md","raw":"---\ntitle: springcloud-gateway-nacos-dynamic-routing\ndate: 2020-03-11 21:01:51\ntags:\n---\n\n## nacos 发布配置\n\n- 通过nacos提供的SDK或直接调用OPENAPI方式发布配置\n- 发布配置注意多个路由放在一个配置中，而不是一个路由创建一个配置\n\n## gateway 监听nacos下发的配置\n\n- 使用框架提供的动态路由方法，必须使用blade-gateway-dev.json\n\n```\n[\n    {\n    \"id\": \"example-list\",\n    \"order\": 0,\n    \"predicates\": [\n                {\n                    \"name\": \"Path\",\n                    \"args\": {\n                        \"pattern\": \"/api/football/match/list\"\n                    }\n                }\n            ],\n            \"filters\": [\n            ],\n    \"uri\": \"lb://ltb-api\"\n    },\n]\n```\n## ","slug":"springcloud-gateway-nacos-dynamic-routing","published":1,"updated":"2020-03-12T14:15:34.552Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjya0008tbwg009o00kl","content":"<h2 id=\"nacos-发布配置\"><a href=\"#nacos-发布配置\" class=\"headerlink\" title=\"nacos 发布配置\"></a>nacos 发布配置</h2><ul>\n<li>通过nacos提供的SDK或直接调用OPENAPI方式发布配置</li>\n<li>发布配置注意多个路由放在一个配置中，而不是一个路由创建一个配置</li>\n</ul>\n<h2 id=\"gateway-监听nacos下发的配置\"><a href=\"#gateway-监听nacos下发的配置\" class=\"headerlink\" title=\"gateway 监听nacos下发的配置\"></a>gateway 监听nacos下发的配置</h2><ul>\n<li>使用框架提供的动态路由方法，必须使用blade-gateway-dev.json</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &quot;id&quot;: &quot;example-list&quot;,</span><br><span class=\"line\">    &quot;order&quot;: 0,</span><br><span class=\"line\">    &quot;predicates&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;name&quot;: &quot;Path&quot;,</span><br><span class=\"line\">                    &quot;args&quot;: &#123;</span><br><span class=\"line\">                        &quot;pattern&quot;: &quot;/api/football/match/list&quot;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;filters&quot;: [</span><br><span class=\"line\">            ],</span><br><span class=\"line\">    &quot;uri&quot;: &quot;lb://ltb-api&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>## </p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"nacos-发布配置\"><a href=\"#nacos-发布配置\" class=\"headerlink\" title=\"nacos 发布配置\"></a>nacos 发布配置</h2><ul>\n<li>通过nacos提供的SDK或直接调用OPENAPI方式发布配置</li>\n<li>发布配置注意多个路由放在一个配置中，而不是一个路由创建一个配置</li>\n</ul>\n<h2 id=\"gateway-监听nacos下发的配置\"><a href=\"#gateway-监听nacos下发的配置\" class=\"headerlink\" title=\"gateway 监听nacos下发的配置\"></a>gateway 监听nacos下发的配置</h2><ul>\n<li>使用框架提供的动态路由方法，必须使用blade-gateway-dev.json</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">    &quot;id&quot;: &quot;example-list&quot;,</span><br><span class=\"line\">    &quot;order&quot;: 0,</span><br><span class=\"line\">    &quot;predicates&quot;: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    &quot;name&quot;: &quot;Path&quot;,</span><br><span class=\"line\">                    &quot;args&quot;: &#123;</span><br><span class=\"line\">                        &quot;pattern&quot;: &quot;/api/football/match/list&quot;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            &quot;filters&quot;: [</span><br><span class=\"line\">            ],</span><br><span class=\"line\">    &quot;uri&quot;: &quot;lb://ltb-api&quot;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>## </p>\n"},{"title":"mysql-remote-root-user","date":"2018-08-01T12:50:08.000Z","_content":"\n\n# Mysql 创建用户\n\n### \n\n### 使用Navicat 创建用户及分配权限\n\n### 拷贝数据库文件\n\n今天使用xampp的过程中， 出现mysql无法正常start的情况，通过log查看发现是table.user的索引坏了。\n\n上网尝试了多种方法无果，只了重新安装，那么就需要把原来的库表备份出来。\n\n在备份的过程中得知数据库引擎不同InnoDB 和MyISAM的备份方式就不同：\n\n1. 在数据库引擎类型为InnoDB时，拷贝数据文件的同时还需要拷贝ibdata1。如果发现还是有问题，将目录下的ib_logfile*文件全部删除掉，重新启动mysql服务。\n1. MyISAM类型的数据文件可以在不同操作系统中COPY，只需要拷贝数据库名字文件夹下面的文件，这样数据库就拷贝完了。","source":"_posts/mysql-remote-root-user.md","raw":"---\ntitle: mysql-remote-root-user\ndate: 2018-08-01 20:50:08\ntags:\n---\n\n\n# Mysql 创建用户\n\n### \n\n### 使用Navicat 创建用户及分配权限\n\n### 拷贝数据库文件\n\n今天使用xampp的过程中， 出现mysql无法正常start的情况，通过log查看发现是table.user的索引坏了。\n\n上网尝试了多种方法无果，只了重新安装，那么就需要把原来的库表备份出来。\n\n在备份的过程中得知数据库引擎不同InnoDB 和MyISAM的备份方式就不同：\n\n1. 在数据库引擎类型为InnoDB时，拷贝数据文件的同时还需要拷贝ibdata1。如果发现还是有问题，将目录下的ib_logfile*文件全部删除掉，重新启动mysql服务。\n1. MyISAM类型的数据文件可以在不同操作系统中COPY，只需要拷贝数据库名字文件夹下面的文件，这样数据库就拷贝完了。","slug":"mysql-remote-root-user","published":1,"updated":"2019-08-03T14:56:42.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyb0009tbwgyp8gjmig","content":"<h1 id=\"Mysql-创建用户\"><a href=\"#Mysql-创建用户\" class=\"headerlink\" title=\"Mysql 创建用户\"></a>Mysql 创建用户</h1><p>### </p>\n<h3 id=\"使用Navicat-创建用户及分配权限\"><a href=\"#使用Navicat-创建用户及分配权限\" class=\"headerlink\" title=\"使用Navicat 创建用户及分配权限\"></a>使用Navicat 创建用户及分配权限</h3><h3 id=\"拷贝数据库文件\"><a href=\"#拷贝数据库文件\" class=\"headerlink\" title=\"拷贝数据库文件\"></a>拷贝数据库文件</h3><p>今天使用xampp的过程中， 出现mysql无法正常start的情况，通过log查看发现是table.user的索引坏了。</p>\n<p>上网尝试了多种方法无果，只了重新安装，那么就需要把原来的库表备份出来。</p>\n<p>在备份的过程中得知数据库引擎不同InnoDB 和MyISAM的备份方式就不同：</p>\n<ol>\n<li>在数据库引擎类型为InnoDB时，拷贝数据文件的同时还需要拷贝ibdata1。如果发现还是有问题，将目录下的ib_logfile*文件全部删除掉，重新启动mysql服务。</li>\n<li>MyISAM类型的数据文件可以在不同操作系统中COPY，只需要拷贝数据库名字文件夹下面的文件，这样数据库就拷贝完了。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Mysql-创建用户\"><a href=\"#Mysql-创建用户\" class=\"headerlink\" title=\"Mysql 创建用户\"></a>Mysql 创建用户</h1><p>### </p>\n<h3 id=\"使用Navicat-创建用户及分配权限\"><a href=\"#使用Navicat-创建用户及分配权限\" class=\"headerlink\" title=\"使用Navicat 创建用户及分配权限\"></a>使用Navicat 创建用户及分配权限</h3><h3 id=\"拷贝数据库文件\"><a href=\"#拷贝数据库文件\" class=\"headerlink\" title=\"拷贝数据库文件\"></a>拷贝数据库文件</h3><p>今天使用xampp的过程中， 出现mysql无法正常start的情况，通过log查看发现是table.user的索引坏了。</p>\n<p>上网尝试了多种方法无果，只了重新安装，那么就需要把原来的库表备份出来。</p>\n<p>在备份的过程中得知数据库引擎不同InnoDB 和MyISAM的备份方式就不同：</p>\n<ol>\n<li>在数据库引擎类型为InnoDB时，拷贝数据文件的同时还需要拷贝ibdata1。如果发现还是有问题，将目录下的ib_logfile*文件全部删除掉，重新启动mysql服务。</li>\n<li>MyISAM类型的数据文件可以在不同操作系统中COPY，只需要拷贝数据库名字文件夹下面的文件，这样数据库就拷贝完了。</li>\n</ol>\n"},{"title":"org.apache.ibatis.binding.BindingException. Parameter 'XXX' not found. Available parameters are [arg0, params, param1, param2]","date":"2019-07-20T14:00:13.000Z","_content":"\n## 解决方法：\n\n导致这个错误的原因是：\n\n```\nIPage<OrderDto> page(IPage<OrderDto> page, Map<String, Object> params);\n```\n\n这里传入了多个参数，需要添加@Param注解：\n\n```\nIPage<OrderDto> page(@Param(\"page\") IPage<OrderDto> page, @Param(\"params\") Map<String, Object> params);\n```","source":"_posts/org-apache-ibatis-binding-BindingException-Parameter-not-found.md","raw":"---\ntitle: org.apache.ibatis.binding.BindingException. Parameter 'XXX'\n  not found. Available parameters are [arg0, params, param1, param2]\ndate: 2019-07-20 22:00:13\ntags:\n---\n\n## 解决方法：\n\n导致这个错误的原因是：\n\n```\nIPage<OrderDto> page(IPage<OrderDto> page, Map<String, Object> params);\n```\n\n这里传入了多个参数，需要添加@Param注解：\n\n```\nIPage<OrderDto> page(@Param(\"page\") IPage<OrderDto> page, @Param(\"params\") Map<String, Object> params);\n```","slug":"org-apache-ibatis-binding-BindingException-Parameter-not-found","published":1,"updated":"2019-07-26T08:51:35.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjye000atbwgjsm9hdbz","content":"<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>导致这个错误的原因是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IPage&lt;OrderDto&gt; page(IPage&lt;OrderDto&gt; page, Map&lt;String, Object&gt; params);</span><br></pre></td></tr></table></figure>\n<p>这里传入了多个参数，需要添加@Param注解：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IPage&lt;OrderDto&gt; page(@Param(&quot;page&quot;) IPage&lt;OrderDto&gt; page, @Param(&quot;params&quot;) Map&lt;String, Object&gt; params);</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"解决方法：\"><a href=\"#解决方法：\" class=\"headerlink\" title=\"解决方法：\"></a>解决方法：</h2><p>导致这个错误的原因是：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IPage&lt;OrderDto&gt; page(IPage&lt;OrderDto&gt; page, Map&lt;String, Object&gt; params);</span><br></pre></td></tr></table></figure>\n<p>这里传入了多个参数，需要添加@Param注解：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IPage&lt;OrderDto&gt; page(@Param(&quot;page&quot;) IPage&lt;OrderDto&gt; page, @Param(&quot;params&quot;) Map&lt;String, Object&gt; params);</span><br></pre></td></tr></table></figure>"},{"title":"spingboot静态资源路径","date":"2019-09-26T10:01:08.000Z","_content":"\nSpring Boot 默认提供了静态资源处理，而有时我们需要自定义资源映射，可定义项目内部目录，也可定义外部目录。\n\n## 通过文件配置\n\n```xml\nspring:\n    mvc:\n        static-path-pattern: /**\n    resources:\n         static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/\n```\n\n上面这几个都是静态资源的映射路径，优先级顺序为：META-INF/resources > resources > static > public\n如果你想指定外部的目录也很简单，直接addResourceLocations指定即可，代码如下：\n\n```\nspring:\n    mvc:\n        static-path-pattern: /**\n    resources:\n        static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:${uploadfile}\n\nuploadfile: /home/upload/\n```\n\n## 通过@Configuration配置\n\n```\n@Configuration\npublic class ApplicationConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/**\")\n                .addResourceLocations(\"classpath:/META-INF/resources/\")\n                .addResourceLocations(\"classpath:/resources/\")\n                .addResourceLocations(\"classpath:/static/\")\n                .addResourceLocations(\"classpath:/public/\");\n        registry.addResourceHandler(\"/upload/**\").addResourceLocations(\"file:/home/upload/\");\n        super.addResourceHandlers(registry);\n    }\n}\n```\n\n### 注意\n\n1. 无论文件配置方式还是注解方式，一定要注意路径最后的“/”必须要有。\n1. 通过注解方式配置会覆盖默认配置。","source":"_posts/spingboot-static-resource-path.md","raw":"---\ntitle: spingboot静态资源路径\ndate: 2019-09-26 18:01:08\ntags:\n---\n\nSpring Boot 默认提供了静态资源处理，而有时我们需要自定义资源映射，可定义项目内部目录，也可定义外部目录。\n\n## 通过文件配置\n\n```xml\nspring:\n    mvc:\n        static-path-pattern: /**\n    resources:\n         static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/\n```\n\n上面这几个都是静态资源的映射路径，优先级顺序为：META-INF/resources > resources > static > public\n如果你想指定外部的目录也很简单，直接addResourceLocations指定即可，代码如下：\n\n```\nspring:\n    mvc:\n        static-path-pattern: /**\n    resources:\n        static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:${uploadfile}\n\nuploadfile: /home/upload/\n```\n\n## 通过@Configuration配置\n\n```\n@Configuration\npublic class ApplicationConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/**\")\n                .addResourceLocations(\"classpath:/META-INF/resources/\")\n                .addResourceLocations(\"classpath:/resources/\")\n                .addResourceLocations(\"classpath:/static/\")\n                .addResourceLocations(\"classpath:/public/\");\n        registry.addResourceHandler(\"/upload/**\").addResourceLocations(\"file:/home/upload/\");\n        super.addResourceHandlers(registry);\n    }\n}\n```\n\n### 注意\n\n1. 无论文件配置方式还是注解方式，一定要注意路径最后的“/”必须要有。\n1. 通过注解方式配置会覆盖默认配置。","slug":"spingboot-static-resource-path","published":1,"updated":"2019-09-26T10:12:45.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyf000btbwgwzj6evve","content":"<p>Spring Boot 默认提供了静态资源处理，而有时我们需要自定义资源映射，可定义项目内部目录，也可定义外部目录。</p>\n<h2 id=\"通过文件配置\"><a href=\"#通过文件配置\" class=\"headerlink\" title=\"通过文件配置\"></a>通过文件配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring:</span><br><span class=\"line\">    mvc:</span><br><span class=\"line\">        static-path-pattern: /**</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">         static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/</span><br></pre></td></tr></table></figure>\n<p>上面这几个都是静态资源的映射路径，优先级顺序为：META-INF/resources &gt; resources &gt; static &gt; public<br>如果你想指定外部的目录也很简单，直接addResourceLocations指定即可，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring:</span><br><span class=\"line\">    mvc:</span><br><span class=\"line\">        static-path-pattern: /**</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">        static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:$&#123;uploadfile&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">uploadfile: /home/upload/</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-Configuration配置\"><a href=\"#通过-Configuration配置\" class=\"headerlink\" title=\"通过@Configuration配置\"></a>通过@Configuration配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Configuration</span><br><span class=\"line\">public class ApplicationConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class=\"line\">        registry.addResourceHandler(&quot;/**&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/resources/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/static/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/public/&quot;);</span><br><span class=\"line\">        registry.addResourceHandler(&quot;/upload/**&quot;).addResourceLocations(&quot;file:/home/upload/&quot;);</span><br><span class=\"line\">        super.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li>无论文件配置方式还是注解方式，一定要注意路径最后的“/”必须要有。</li>\n<li>通过注解方式配置会覆盖默认配置。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>Spring Boot 默认提供了静态资源处理，而有时我们需要自定义资源映射，可定义项目内部目录，也可定义外部目录。</p>\n<h2 id=\"通过文件配置\"><a href=\"#通过文件配置\" class=\"headerlink\" title=\"通过文件配置\"></a>通过文件配置</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring:</span><br><span class=\"line\">    mvc:</span><br><span class=\"line\">        static-path-pattern: /**</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">         static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/</span><br></pre></td></tr></table></figure>\n<p>上面这几个都是静态资源的映射路径，优先级顺序为：META-INF/resources &gt; resources &gt; static &gt; public<br>如果你想指定外部的目录也很简单，直接addResourceLocations指定即可，代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring:</span><br><span class=\"line\">    mvc:</span><br><span class=\"line\">        static-path-pattern: /**</span><br><span class=\"line\">    resources:</span><br><span class=\"line\">        static-locations: classpath:/META-INF/resources/,classpath:/resources/, classpath:/static/, classpath:/public/, file:$&#123;uploadfile&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">uploadfile: /home/upload/</span><br></pre></td></tr></table></figure>\n<h2 id=\"通过-Configuration配置\"><a href=\"#通过-Configuration配置\" class=\"headerlink\" title=\"通过@Configuration配置\"></a>通过@Configuration配置</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Configuration</span><br><span class=\"line\">public class ApplicationConfig extends WebMvcConfigurerAdapter &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class=\"line\">        registry.addResourceHandler(&quot;/**&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/META-INF/resources/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/resources/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/static/&quot;)</span><br><span class=\"line\">                .addResourceLocations(&quot;classpath:/public/&quot;);</span><br><span class=\"line\">        registry.addResourceHandler(&quot;/upload/**&quot;).addResourceLocations(&quot;file:/home/upload/&quot;);</span><br><span class=\"line\">        super.addResourceHandlers(registry);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><ol>\n<li>无论文件配置方式还是注解方式，一定要注意路径最后的“/”必须要有。</li>\n<li>通过注解方式配置会覆盖默认配置。</li>\n</ol>\n"},{"title":"使用frp实现内网穿透","date":"2018-06-30T16:47:43.000Z","_content":"\n** frp ** 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议，并且支持根据域名进行路由转发。\n\n## 开始使用\n\n根据对应的操作系统及架构，在[Release](https://github.com/fatedier/frp/releases)页面中找到对应的frp程序。\n\n### 外网主机\n\n```\n# 使用wget指令下载frp\nwget https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz\n\n# 使用tar指令解压tar.gz文件\ntar -zxvf frp_0.13.0_linux_amd64.tar.gz\n\n# 使用cd指令进入解压出来的文件夹，外网主机作为服务端，可以删掉不必要的客户端文件，使用rm指令删除文件。\ncd frp_0.13.0_linux_amd64\nrm -f frpc\nrm -f frpc.ini\n\n# 接下来要修改服务器配置文件，即frps.ini文件。使用vi指令对目标文件进行编辑。\n\nvi frps.ini\n\n[common]\nbind_port = 7000\nvhost_http_port = 80\nvhost_https_port = 443\n\ndashboard_port = 7500\ndashboard_user = admin\ndashboard_pwd = admin\n\nsubdomain_host = frps.com\n\n# [common]部分是必须有的配置，其中bind_port是自己设定的frp服务端端口，vhost_http_port是自己设定的http访问端口, dashboard_port是控制台端口， subdomain_host自定义域名路由。\n\n# 保存上面的配置后，使用以下指令启动frp服务端。（如果需要在后台运行，请往下翻阅关于后台运行的部分。）\n\n# 服务端的工作就到此结束了。\n./frps -c ./frps.ini\n```\n\n### 客户端\n\n客户端前面的操作和服务端一样，根据自己的操作系统下载对应的程序，这里不一一解释。主要看下客户端的配置：\n\n```\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = no2.sunnyrx.com\n```\n\n上面的配置和服务端是对应的。\n\n[common]中的server_addr填frp服务端的ip（也就是外网主机的IP），server_port填frp服务端的bind_prot。\n\n[web]同上，local_port填群晖的web端口。这里创建了两个http反向代理是为了分别映射群晖两个重要的端口，5000和80，前者用于登录群晖管理，后者用于群晖的Web Station和DS Photo。\n\n保存配置，输入以下指令运行frp客户端。（同样如果需要在后台运行，请往下翻阅关于后台运行的部分。）\n\n```\n./frpc -c ./frpc.ini\n```\n\n此时在服务端会看到”start proxy sucess”字样，即连接成功。\n\n### 让frp在后台运行\n\n虽然现在frp运作起来了，内网穿透也实现了，但这还是不够的。此时如果断开与服务端或者客户端的SSH连接（比如关掉了Xshell）也就中止了frp的运行。\n\n保持frp运行是关键是让服务端的frp和客户端的frp在后台运行，这里提两个方法供参考，一个是使用supervisor，另一个是使用winsw, 分别实现了linux和windows下后台运行。\n\n1. supervisor\n\n```\n# 需要知道几个名词\nsupervisor：要安装的软件的名称。 \nsupervisord：装好supervisor软件后，supervisord用于启动supervisor服务。 \nsupervisorctl：用于管理supervisor配置文件中program。\n```\n\n```\n# 安装\nyum install supervisor\n\n# 开机自启动\nsystemctl enable supervisord \n\n# 查看是否启动\nsystemctl is-enabled supervisord\n\n# 启动supervisord服务\nsystemctl start supervisord \n\n# 查看supervisord服务状态\nsystemctl status supervisord \n\n# 查看是否存在supervisord进程\nps -ef|grep supervisord \n\n# 停止\nsystemctl stop supervisord\n\n# 重启\nsystemctl restart supervisord\n```\n\n默认安装supervisor文件会生成在下面的路径中：\n\n```\n/etc/supervisord.conf\n/etc/supervisord.d/\n```\n\n然后在/etc/supervisor.d下新建一个配置文件frps.ini，输入以下内容。command应该是你放置frps软件的位置。\n\n```\n[program:frps]\ncommand = /opt/frp/frp_0.9.3_linux_amd64/frps -c /opt/frp/frp_0.9.3_linux_amd64/frps.ini\nautostart = true\n```\n\n然后使用上面的命令启动supervisor。\n\n2.winsw\n\n[winsw](https://github.com/kohsuke/winsw/releases)能让Windows程序运行为服务，只需要将winsw.exe和frpc.exe放到了一起，这样只需要直接填写程序名称。然后在和winsw.exe同级的目录下，新建winsw.xml文件，输入以下内容。\n\n```\n<service>\n    <id>frp</id>\n    <name>frp</name>\n    <description>用frp发布本地电脑网站到外网</description>\n    <executable>frpc</executable>\n    <arguments>-c frpc.ini</arguments>\n    <logmode>reset</logmode>\n</service>\n```\n\n然后打开管理员权限命令提示符，使用下面的命令安装并启动服务。\n\n```\nwinsw install\nwinsw uninstall\n```","source":"_posts/use-frp.md","raw":"---\ntitle: 使用frp实现内网穿透\ndate: 2018-07-01 00:47:43\ntags:\n---\n\n** frp ** 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议，并且支持根据域名进行路由转发。\n\n## 开始使用\n\n根据对应的操作系统及架构，在[Release](https://github.com/fatedier/frp/releases)页面中找到对应的frp程序。\n\n### 外网主机\n\n```\n# 使用wget指令下载frp\nwget https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz\n\n# 使用tar指令解压tar.gz文件\ntar -zxvf frp_0.13.0_linux_amd64.tar.gz\n\n# 使用cd指令进入解压出来的文件夹，外网主机作为服务端，可以删掉不必要的客户端文件，使用rm指令删除文件。\ncd frp_0.13.0_linux_amd64\nrm -f frpc\nrm -f frpc.ini\n\n# 接下来要修改服务器配置文件，即frps.ini文件。使用vi指令对目标文件进行编辑。\n\nvi frps.ini\n\n[common]\nbind_port = 7000\nvhost_http_port = 80\nvhost_https_port = 443\n\ndashboard_port = 7500\ndashboard_user = admin\ndashboard_pwd = admin\n\nsubdomain_host = frps.com\n\n# [common]部分是必须有的配置，其中bind_port是自己设定的frp服务端端口，vhost_http_port是自己设定的http访问端口, dashboard_port是控制台端口， subdomain_host自定义域名路由。\n\n# 保存上面的配置后，使用以下指令启动frp服务端。（如果需要在后台运行，请往下翻阅关于后台运行的部分。）\n\n# 服务端的工作就到此结束了。\n./frps -c ./frps.ini\n```\n\n### 客户端\n\n客户端前面的操作和服务端一样，根据自己的操作系统下载对应的程序，这里不一一解释。主要看下客户端的配置：\n\n```\n[common]\nserver_addr = x.x.x.x\nserver_port = 7000\n\n[web]\ntype = http\nlocal_port = 80\ncustom_domains = no2.sunnyrx.com\n```\n\n上面的配置和服务端是对应的。\n\n[common]中的server_addr填frp服务端的ip（也就是外网主机的IP），server_port填frp服务端的bind_prot。\n\n[web]同上，local_port填群晖的web端口。这里创建了两个http反向代理是为了分别映射群晖两个重要的端口，5000和80，前者用于登录群晖管理，后者用于群晖的Web Station和DS Photo。\n\n保存配置，输入以下指令运行frp客户端。（同样如果需要在后台运行，请往下翻阅关于后台运行的部分。）\n\n```\n./frpc -c ./frpc.ini\n```\n\n此时在服务端会看到”start proxy sucess”字样，即连接成功。\n\n### 让frp在后台运行\n\n虽然现在frp运作起来了，内网穿透也实现了，但这还是不够的。此时如果断开与服务端或者客户端的SSH连接（比如关掉了Xshell）也就中止了frp的运行。\n\n保持frp运行是关键是让服务端的frp和客户端的frp在后台运行，这里提两个方法供参考，一个是使用supervisor，另一个是使用winsw, 分别实现了linux和windows下后台运行。\n\n1. supervisor\n\n```\n# 需要知道几个名词\nsupervisor：要安装的软件的名称。 \nsupervisord：装好supervisor软件后，supervisord用于启动supervisor服务。 \nsupervisorctl：用于管理supervisor配置文件中program。\n```\n\n```\n# 安装\nyum install supervisor\n\n# 开机自启动\nsystemctl enable supervisord \n\n# 查看是否启动\nsystemctl is-enabled supervisord\n\n# 启动supervisord服务\nsystemctl start supervisord \n\n# 查看supervisord服务状态\nsystemctl status supervisord \n\n# 查看是否存在supervisord进程\nps -ef|grep supervisord \n\n# 停止\nsystemctl stop supervisord\n\n# 重启\nsystemctl restart supervisord\n```\n\n默认安装supervisor文件会生成在下面的路径中：\n\n```\n/etc/supervisord.conf\n/etc/supervisord.d/\n```\n\n然后在/etc/supervisor.d下新建一个配置文件frps.ini，输入以下内容。command应该是你放置frps软件的位置。\n\n```\n[program:frps]\ncommand = /opt/frp/frp_0.9.3_linux_amd64/frps -c /opt/frp/frp_0.9.3_linux_amd64/frps.ini\nautostart = true\n```\n\n然后使用上面的命令启动supervisor。\n\n2.winsw\n\n[winsw](https://github.com/kohsuke/winsw/releases)能让Windows程序运行为服务，只需要将winsw.exe和frpc.exe放到了一起，这样只需要直接填写程序名称。然后在和winsw.exe同级的目录下，新建winsw.xml文件，输入以下内容。\n\n```\n<service>\n    <id>frp</id>\n    <name>frp</name>\n    <description>用frp发布本地电脑网站到外网</description>\n    <executable>frpc</executable>\n    <arguments>-c frpc.ini</arguments>\n    <logmode>reset</logmode>\n</service>\n```\n\n然后打开管理员权限命令提示符，使用下面的命令安装并启动服务。\n\n```\nwinsw install\nwinsw uninstall\n```","slug":"use-frp","published":1,"updated":"2018-09-06T12:58:42.902Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyh000ctbwgu96fernn","content":"<p><strong> frp </strong> 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议，并且支持根据域名进行路由转发。</p>\n<h2 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h2><p>根据对应的操作系统及架构，在<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">Release</a>页面中找到对应的frp程序。</p>\n<h3 id=\"外网主机\"><a href=\"#外网主机\" class=\"headerlink\" title=\"外网主机\"></a>外网主机</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用wget指令下载frp</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用tar指令解压tar.gz文件</span><br><span class=\"line\">tar -zxvf frp_0.13.0_linux_amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用cd指令进入解压出来的文件夹，外网主机作为服务端，可以删掉不必要的客户端文件，使用rm指令删除文件。</span><br><span class=\"line\">cd frp_0.13.0_linux_amd64</span><br><span class=\"line\">rm -f frpc</span><br><span class=\"line\">rm -f frpc.ini</span><br><span class=\"line\"></span><br><span class=\"line\"># 接下来要修改服务器配置文件，即frps.ini文件。使用vi指令对目标文件进行编辑。</span><br><span class=\"line\"></span><br><span class=\"line\">vi frps.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\">vhost_http_port = 80</span><br><span class=\"line\">vhost_https_port = 443</span><br><span class=\"line\"></span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = admin</span><br><span class=\"line\">dashboard_pwd = admin</span><br><span class=\"line\"></span><br><span class=\"line\">subdomain_host = frps.com</span><br><span class=\"line\"></span><br><span class=\"line\"># [common]部分是必须有的配置，其中bind_port是自己设定的frp服务端端口，vhost_http_port是自己设定的http访问端口, dashboard_port是控制台端口， subdomain_host自定义域名路由。</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存上面的配置后，使用以下指令启动frp服务端。（如果需要在后台运行，请往下翻阅关于后台运行的部分。）</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务端的工作就到此结束了。</span><br><span class=\"line\">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><p>客户端前面的操作和服务端一样，根据自己的操作系统下载对应的程序，这里不一一解释。主要看下客户端的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = x.x.x.x</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\">[web]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 80</span><br><span class=\"line\">custom_domains = no2.sunnyrx.com</span><br></pre></td></tr></table></figure>\n<p>上面的配置和服务端是对应的。</p>\n<p>[common]中的server_addr填frp服务端的ip（也就是外网主机的IP），server_port填frp服务端的bind_prot。</p>\n<p>[web]同上，local_port填群晖的web端口。这里创建了两个http反向代理是为了分别映射群晖两个重要的端口，5000和80，前者用于登录群晖管理，后者用于群晖的Web Station和DS Photo。</p>\n<p>保存配置，输入以下指令运行frp客户端。（同样如果需要在后台运行，请往下翻阅关于后台运行的部分。）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure>\n<p>此时在服务端会看到”start proxy sucess”字样，即连接成功。</p>\n<h3 id=\"让frp在后台运行\"><a href=\"#让frp在后台运行\" class=\"headerlink\" title=\"让frp在后台运行\"></a>让frp在后台运行</h3><p>虽然现在frp运作起来了，内网穿透也实现了，但这还是不够的。此时如果断开与服务端或者客户端的SSH连接（比如关掉了Xshell）也就中止了frp的运行。</p>\n<p>保持frp运行是关键是让服务端的frp和客户端的frp在后台运行，这里提两个方法供参考，一个是使用supervisor，另一个是使用winsw, 分别实现了linux和windows下后台运行。</p>\n<ol>\n<li>supervisor</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 需要知道几个名词</span><br><span class=\"line\">supervisor：要安装的软件的名称。 </span><br><span class=\"line\">supervisord：装好supervisor软件后，supervisord用于启动supervisor服务。 </span><br><span class=\"line\">supervisorctl：用于管理supervisor配置文件中program。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装</span><br><span class=\"line\">yum install supervisor</span><br><span class=\"line\"></span><br><span class=\"line\"># 开机自启动</span><br><span class=\"line\">systemctl enable supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看是否启动</span><br><span class=\"line\">systemctl is-enabled supervisord</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动supervisord服务</span><br><span class=\"line\">systemctl start supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看supervisord服务状态</span><br><span class=\"line\">systemctl status supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看是否存在supervisord进程</span><br><span class=\"line\">ps -ef|grep supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 停止</span><br><span class=\"line\">systemctl stop supervisord</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启</span><br><span class=\"line\">systemctl restart supervisord</span><br></pre></td></tr></table></figure>\n<p>默认安装supervisor文件会生成在下面的路径中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/supervisord.conf</span><br><span class=\"line\">/etc/supervisord.d/</span><br></pre></td></tr></table></figure>\n<p>然后在/etc/supervisor.d下新建一个配置文件frps.ini，输入以下内容。command应该是你放置frps软件的位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[program:frps]</span><br><span class=\"line\">command = /opt/frp/frp_0.9.3_linux_amd64/frps -c /opt/frp/frp_0.9.3_linux_amd64/frps.ini</span><br><span class=\"line\">autostart = true</span><br></pre></td></tr></table></figure>\n<p>然后使用上面的命令启动supervisor。</p>\n<p>2.winsw</p>\n<p><a href=\"https://github.com/kohsuke/winsw/releases\" target=\"_blank\" rel=\"noopener\">winsw</a>能让Windows程序运行为服务，只需要将winsw.exe和frpc.exe放到了一起，这样只需要直接填写程序名称。然后在和winsw.exe同级的目录下，新建winsw.xml文件，输入以下内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;service&gt;</span><br><span class=\"line\">    &lt;id&gt;frp&lt;/id&gt;</span><br><span class=\"line\">    &lt;name&gt;frp&lt;/name&gt;</span><br><span class=\"line\">    &lt;description&gt;用frp发布本地电脑网站到外网&lt;/description&gt;</span><br><span class=\"line\">    &lt;executable&gt;frpc&lt;/executable&gt;</span><br><span class=\"line\">    &lt;arguments&gt;-c frpc.ini&lt;/arguments&gt;</span><br><span class=\"line\">    &lt;logmode&gt;reset&lt;/logmode&gt;</span><br><span class=\"line\">&lt;/service&gt;</span><br></pre></td></tr></table></figure>\n<p>然后打开管理员权限命令提示符，使用下面的命令安装并启动服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">winsw install</span><br><span class=\"line\">winsw uninstall</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><strong> frp </strong> 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议，并且支持根据域名进行路由转发。</p>\n<h2 id=\"开始使用\"><a href=\"#开始使用\" class=\"headerlink\" title=\"开始使用\"></a>开始使用</h2><p>根据对应的操作系统及架构，在<a href=\"https://github.com/fatedier/frp/releases\" target=\"_blank\" rel=\"noopener\">Release</a>页面中找到对应的frp程序。</p>\n<h3 id=\"外网主机\"><a href=\"#外网主机\" class=\"headerlink\" title=\"外网主机\"></a>外网主机</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用wget指令下载frp</span><br><span class=\"line\">wget https://github.com/fatedier/frp/releases/download/v0.13.0/frp_0.13.0_linux_amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用tar指令解压tar.gz文件</span><br><span class=\"line\">tar -zxvf frp_0.13.0_linux_amd64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用cd指令进入解压出来的文件夹，外网主机作为服务端，可以删掉不必要的客户端文件，使用rm指令删除文件。</span><br><span class=\"line\">cd frp_0.13.0_linux_amd64</span><br><span class=\"line\">rm -f frpc</span><br><span class=\"line\">rm -f frpc.ini</span><br><span class=\"line\"></span><br><span class=\"line\"># 接下来要修改服务器配置文件，即frps.ini文件。使用vi指令对目标文件进行编辑。</span><br><span class=\"line\"></span><br><span class=\"line\">vi frps.ini</span><br><span class=\"line\"></span><br><span class=\"line\">[common]</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\">vhost_http_port = 80</span><br><span class=\"line\">vhost_https_port = 443</span><br><span class=\"line\"></span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\">dashboard_user = admin</span><br><span class=\"line\">dashboard_pwd = admin</span><br><span class=\"line\"></span><br><span class=\"line\">subdomain_host = frps.com</span><br><span class=\"line\"></span><br><span class=\"line\"># [common]部分是必须有的配置，其中bind_port是自己设定的frp服务端端口，vhost_http_port是自己设定的http访问端口, dashboard_port是控制台端口， subdomain_host自定义域名路由。</span><br><span class=\"line\"></span><br><span class=\"line\"># 保存上面的配置后，使用以下指令启动frp服务端。（如果需要在后台运行，请往下翻阅关于后台运行的部分。）</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务端的工作就到此结束了。</span><br><span class=\"line\">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure>\n<h3 id=\"客户端\"><a href=\"#客户端\" class=\"headerlink\" title=\"客户端\"></a>客户端</h3><p>客户端前面的操作和服务端一样，根据自己的操作系统下载对应的程序，这里不一一解释。主要看下客户端的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\">server_addr = x.x.x.x</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\">[web]</span><br><span class=\"line\">type = http</span><br><span class=\"line\">local_port = 80</span><br><span class=\"line\">custom_domains = no2.sunnyrx.com</span><br></pre></td></tr></table></figure>\n<p>上面的配置和服务端是对应的。</p>\n<p>[common]中的server_addr填frp服务端的ip（也就是外网主机的IP），server_port填frp服务端的bind_prot。</p>\n<p>[web]同上，local_port填群晖的web端口。这里创建了两个http反向代理是为了分别映射群晖两个重要的端口，5000和80，前者用于登录群晖管理，后者用于群晖的Web Station和DS Photo。</p>\n<p>保存配置，输入以下指令运行frp客户端。（同样如果需要在后台运行，请往下翻阅关于后台运行的部分。）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure>\n<p>此时在服务端会看到”start proxy sucess”字样，即连接成功。</p>\n<h3 id=\"让frp在后台运行\"><a href=\"#让frp在后台运行\" class=\"headerlink\" title=\"让frp在后台运行\"></a>让frp在后台运行</h3><p>虽然现在frp运作起来了，内网穿透也实现了，但这还是不够的。此时如果断开与服务端或者客户端的SSH连接（比如关掉了Xshell）也就中止了frp的运行。</p>\n<p>保持frp运行是关键是让服务端的frp和客户端的frp在后台运行，这里提两个方法供参考，一个是使用supervisor，另一个是使用winsw, 分别实现了linux和windows下后台运行。</p>\n<ol>\n<li>supervisor</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 需要知道几个名词</span><br><span class=\"line\">supervisor：要安装的软件的名称。 </span><br><span class=\"line\">supervisord：装好supervisor软件后，supervisord用于启动supervisor服务。 </span><br><span class=\"line\">supervisorctl：用于管理supervisor配置文件中program。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装</span><br><span class=\"line\">yum install supervisor</span><br><span class=\"line\"></span><br><span class=\"line\"># 开机自启动</span><br><span class=\"line\">systemctl enable supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看是否启动</span><br><span class=\"line\">systemctl is-enabled supervisord</span><br><span class=\"line\"></span><br><span class=\"line\"># 启动supervisord服务</span><br><span class=\"line\">systemctl start supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看supervisord服务状态</span><br><span class=\"line\">systemctl status supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 查看是否存在supervisord进程</span><br><span class=\"line\">ps -ef|grep supervisord </span><br><span class=\"line\"></span><br><span class=\"line\"># 停止</span><br><span class=\"line\">systemctl stop supervisord</span><br><span class=\"line\"></span><br><span class=\"line\"># 重启</span><br><span class=\"line\">systemctl restart supervisord</span><br></pre></td></tr></table></figure>\n<p>默认安装supervisor文件会生成在下面的路径中：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/supervisord.conf</span><br><span class=\"line\">/etc/supervisord.d/</span><br></pre></td></tr></table></figure>\n<p>然后在/etc/supervisor.d下新建一个配置文件frps.ini，输入以下内容。command应该是你放置frps软件的位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[program:frps]</span><br><span class=\"line\">command = /opt/frp/frp_0.9.3_linux_amd64/frps -c /opt/frp/frp_0.9.3_linux_amd64/frps.ini</span><br><span class=\"line\">autostart = true</span><br></pre></td></tr></table></figure>\n<p>然后使用上面的命令启动supervisor。</p>\n<p>2.winsw</p>\n<p><a href=\"https://github.com/kohsuke/winsw/releases\" target=\"_blank\" rel=\"noopener\">winsw</a>能让Windows程序运行为服务，只需要将winsw.exe和frpc.exe放到了一起，这样只需要直接填写程序名称。然后在和winsw.exe同级的目录下，新建winsw.xml文件，输入以下内容。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;service&gt;</span><br><span class=\"line\">    &lt;id&gt;frp&lt;/id&gt;</span><br><span class=\"line\">    &lt;name&gt;frp&lt;/name&gt;</span><br><span class=\"line\">    &lt;description&gt;用frp发布本地电脑网站到外网&lt;/description&gt;</span><br><span class=\"line\">    &lt;executable&gt;frpc&lt;/executable&gt;</span><br><span class=\"line\">    &lt;arguments&gt;-c frpc.ini&lt;/arguments&gt;</span><br><span class=\"line\">    &lt;logmode&gt;reset&lt;/logmode&gt;</span><br><span class=\"line\">&lt;/service&gt;</span><br></pre></td></tr></table></figure>\n<p>然后打开管理员权限命令提示符，使用下面的命令安装并启动服务。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">winsw install</span><br><span class=\"line\">winsw uninstall</span><br></pre></td></tr></table></figure>"},{"title":"使用Jenkins实现自动化部署","date":"2018-06-27T09:20:39.000Z","_content":"**Jenkins** 是一个 [持续集成](https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90) 工具。在这里也只是简单一用，实现下自动化部署。对于它强大的功能在日后再慢慢展开吧。\n\n## 安装\n从官网下载war包，\n\n![jenkins download](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/%5Buse-jenkins-for-auto-deploy%5DIMG_1.png)\n\n直接放置到Tomcat目录或通过命令行 java -jar jenkins.war 运行。\n\n## 配置\n\n1.首次启动jenkins，出于安全考虑，jenkins会生成一个随机的口令到文件中，复制文件中的口令到jenkins即可通过访问。\n\n![jenkins password](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-103937.png)\n\n2.选择安装默认插件：\n\n![jenkins plugins](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-104439.png)\n\n3.跳转创建用户使用admin登录：\n\n![jenkins account](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png)\n\n4.系统管理-全局工具配置-Maven、JDK安装：\n\n![jenkins con](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png)\n\n## 部署SVN项目\n\n\n## 常用问题\n\n1.使用Tomcat运行jenkins时，出现安装目录在C:\\Windows\\System32\\config\\systemprofile\\.jenkins\\secrets\\initialAdminPassword\n的情况：\n\n>因为Tomcat服务启动使用本地系统的帐户，在服务里改成具体的用户帐户即可。\n\n![jenkins init pwd](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-170630.png)\n\n2.点击创建一个新任务，没有maven选择：\n\n![jenkins con](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110406.png)\n\n需要安装 maven integration 插件：\n\n![maven integration](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112152.png)\n\n3.如果需要发包到服务器需要安装 publish over SSH 插件:\n\n![publish over ssh](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112421.png)\n\n4.如何编译部署本地项目到服务器","source":"_posts/use-jenkins-for-auto-deploy.md","raw":"---\ntitle: 使用Jenkins实现自动化部署\ndate: 2018-06-27 17:20:39\ntags:\n---\n**Jenkins** 是一个 [持续集成](https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90) 工具。在这里也只是简单一用，实现下自动化部署。对于它强大的功能在日后再慢慢展开吧。\n\n## 安装\n从官网下载war包，\n\n![jenkins download](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/%5Buse-jenkins-for-auto-deploy%5DIMG_1.png)\n\n直接放置到Tomcat目录或通过命令行 java -jar jenkins.war 运行。\n\n## 配置\n\n1.首次启动jenkins，出于安全考虑，jenkins会生成一个随机的口令到文件中，复制文件中的口令到jenkins即可通过访问。\n\n![jenkins password](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-103937.png)\n\n2.选择安装默认插件：\n\n![jenkins plugins](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-104439.png)\n\n3.跳转创建用户使用admin登录：\n\n![jenkins account](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png)\n\n4.系统管理-全局工具配置-Maven、JDK安装：\n\n![jenkins con](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png)\n\n## 部署SVN项目\n\n\n## 常用问题\n\n1.使用Tomcat运行jenkins时，出现安装目录在C:\\Windows\\System32\\config\\systemprofile\\.jenkins\\secrets\\initialAdminPassword\n的情况：\n\n>因为Tomcat服务启动使用本地系统的帐户，在服务里改成具体的用户帐户即可。\n\n![jenkins init pwd](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-170630.png)\n\n2.点击创建一个新任务，没有maven选择：\n\n![jenkins con](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110406.png)\n\n需要安装 maven integration 插件：\n\n![maven integration](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112152.png)\n\n3.如果需要发包到服务器需要安装 publish over SSH 插件:\n\n![publish over ssh](http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112421.png)\n\n4.如何编译部署本地项目到服务器","slug":"use-jenkins-for-auto-deploy","published":1,"updated":"2018-07-09T09:34:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyi000dtbwgp5r1bv33","content":"<p><strong>Jenkins</strong> 是一个 <a href=\"https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90\" target=\"_blank\" rel=\"noopener\">持续集成</a> 工具。在这里也只是简单一用，实现下自动化部署。对于它强大的功能在日后再慢慢展开吧。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>从官网下载war包，</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/%5Buse-jenkins-for-auto-deploy%5DIMG_1.png\" alt=\"jenkins download\"></p>\n<p>直接放置到Tomcat目录或通过命令行 java -jar jenkins.war 运行。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>1.首次启动jenkins，出于安全考虑，jenkins会生成一个随机的口令到文件中，复制文件中的口令到jenkins即可通过访问。</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-103937.png\" alt=\"jenkins password\"></p>\n<p>2.选择安装默认插件：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-104439.png\" alt=\"jenkins plugins\"></p>\n<p>3.跳转创建用户使用admin登录：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png\" alt=\"jenkins account\"></p>\n<p>4.系统管理-全局工具配置-Maven、JDK安装：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png\" alt=\"jenkins con\"></p>\n<h2 id=\"部署SVN项目\"><a href=\"#部署SVN项目\" class=\"headerlink\" title=\"部署SVN项目\"></a>部署SVN项目</h2><h2 id=\"常用问题\"><a href=\"#常用问题\" class=\"headerlink\" title=\"常用问题\"></a>常用问题</h2><p>1.使用Tomcat运行jenkins时，出现安装目录在C:\\Windows\\System32\\config\\systemprofile.jenkins\\secrets\\initialAdminPassword<br>的情况：</p>\n<blockquote>\n<p>因为Tomcat服务启动使用本地系统的帐户，在服务里改成具体的用户帐户即可。</p>\n</blockquote>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-170630.png\" alt=\"jenkins init pwd\"></p>\n<p>2.点击创建一个新任务，没有maven选择：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110406.png\" alt=\"jenkins con\"></p>\n<p>需要安装 maven integration 插件：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112152.png\" alt=\"maven integration\"></p>\n<p>3.如果需要发包到服务器需要安装 publish over SSH 插件:</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112421.png\" alt=\"publish over ssh\"></p>\n<p>4.如何编译部署本地项目到服务器</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Jenkins</strong> 是一个 <a href=\"https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90\" target=\"_blank\" rel=\"noopener\">持续集成</a> 工具。在这里也只是简单一用，实现下自动化部署。对于它强大的功能在日后再慢慢展开吧。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>从官网下载war包，</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/%5Buse-jenkins-for-auto-deploy%5DIMG_1.png\" alt=\"jenkins download\"></p>\n<p>直接放置到Tomcat目录或通过命令行 java -jar jenkins.war 运行。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>1.首次启动jenkins，出于安全考虑，jenkins会生成一个随机的口令到文件中，复制文件中的口令到jenkins即可通过访问。</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-103937.png\" alt=\"jenkins password\"></p>\n<p>2.选择安装默认插件：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-104439.png\" alt=\"jenkins plugins\"></p>\n<p>3.跳转创建用户使用admin登录：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png\" alt=\"jenkins account\"></p>\n<p>4.系统管理-全局工具配置-Maven、JDK安装：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110142.png\" alt=\"jenkins con\"></p>\n<h2 id=\"部署SVN项目\"><a href=\"#部署SVN项目\" class=\"headerlink\" title=\"部署SVN项目\"></a>部署SVN项目</h2><h2 id=\"常用问题\"><a href=\"#常用问题\" class=\"headerlink\" title=\"常用问题\"></a>常用问题</h2><p>1.使用Tomcat运行jenkins时，出现安装目录在C:\\Windows\\System32\\config\\systemprofile.jenkins\\secrets\\initialAdminPassword<br>的情况：</p>\n<blockquote>\n<p>因为Tomcat服务启动使用本地系统的帐户，在服务里改成具体的用户帐户即可。</p>\n</blockquote>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-170630.png\" alt=\"jenkins init pwd\"></p>\n<p>2.点击创建一个新任务，没有maven选择：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-110406.png\" alt=\"jenkins con\"></p>\n<p>需要安装 maven integration 插件：</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112152.png\" alt=\"maven integration\"></p>\n<p>3.如果需要发包到服务器需要安装 publish over SSH 插件:</p>\n<p><img src=\"http://7vzqnv.com1.z0.glb.clouddn.com/hexo/use-jenkins-for-auto-deploy-WX20180701-112421.png\" alt=\"publish over ssh\"></p>\n<p>4.如何编译部署本地项目到服务器</p>\n"},{"title":"IntelliJ IDEA 使用","date":"2019-07-28T15:25:41.000Z","_content":"\n## 下载安装\n\n## 快捷方式\n\n## 常用插件\n\n## FAQ\n\n### 1.无法启动\n\n```\n打开finder->应用程序->idea.app->右键->显示包内容->然后MaxOS->双击shell脚本（idea）\n```\n这样是通过命令行的方式来启动IDEA。\n仔细看里面的提示，尤其Error开头的信息，应该会有具体原因。\n\nyou know？ 然后JetbrainsCrack-3.1-release-enc.jar 被我不小心删了，放回原位就好了......\n\n\n### 1.永久使用\n\n在输入验证码时，一直提示“key is invaild”，打开~/资源库/Preferences/\n其中有个 IntelliJIdea2018.2 文件，里面也会有个idea.vmoptions ，也在最后一行加入；\n\n```\n-javaagent:JetbrainsCrack-3.1-release-enc.jar\n```\n\n再打开软件再次输入验证码即可：\n\n```\n{\"licenseId\":\"1337\",\n\"licenseeName\":\"ChaosGod\",\n\"assigneeName\":\"\",\n\"assigneeEmail\":\"\",\n\"licenseRestriction\":\"Unlimited license till end of the century.\",\n\"checkConcurrentUse\":false,\n\"products\":[\n{\"code\":\"II\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DM\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"AC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RS0\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"WS\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DPN\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"PS\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RM\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"CL\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"PC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DB\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"GO\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RD\",\"paidUpTo\":\"2099-12-31\"}\n],\n\"hash\":\"2911276/0\",\n\"gracePeriodDays\":7,\n\"autoProlongated\":false}\n```","source":"_posts/use-ideaj.md","raw":"---\ntitle: IntelliJ IDEA 使用\ndate: 2019-07-28 23:25:41\ntags:\n---\n\n## 下载安装\n\n## 快捷方式\n\n## 常用插件\n\n## FAQ\n\n### 1.无法启动\n\n```\n打开finder->应用程序->idea.app->右键->显示包内容->然后MaxOS->双击shell脚本（idea）\n```\n这样是通过命令行的方式来启动IDEA。\n仔细看里面的提示，尤其Error开头的信息，应该会有具体原因。\n\nyou know？ 然后JetbrainsCrack-3.1-release-enc.jar 被我不小心删了，放回原位就好了......\n\n\n### 1.永久使用\n\n在输入验证码时，一直提示“key is invaild”，打开~/资源库/Preferences/\n其中有个 IntelliJIdea2018.2 文件，里面也会有个idea.vmoptions ，也在最后一行加入；\n\n```\n-javaagent:JetbrainsCrack-3.1-release-enc.jar\n```\n\n再打开软件再次输入验证码即可：\n\n```\n{\"licenseId\":\"1337\",\n\"licenseeName\":\"ChaosGod\",\n\"assigneeName\":\"\",\n\"assigneeEmail\":\"\",\n\"licenseRestriction\":\"Unlimited license till end of the century.\",\n\"checkConcurrentUse\":false,\n\"products\":[\n{\"code\":\"II\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DM\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"AC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RS0\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"WS\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DPN\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"PS\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RM\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"CL\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"PC\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"DB\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"GO\",\"paidUpTo\":\"2099-12-31\"},\n{\"code\":\"RD\",\"paidUpTo\":\"2099-12-31\"}\n],\n\"hash\":\"2911276/0\",\n\"gracePeriodDays\":7,\n\"autoProlongated\":false}\n```","slug":"use-ideaj","published":1,"updated":"2019-10-18T15:18:53.703Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyk000etbwgy8kxwkkt","content":"<h2 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h2><h2 id=\"快捷方式\"><a href=\"#快捷方式\" class=\"headerlink\" title=\"快捷方式\"></a>快捷方式</h2><h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"1-无法启动\"><a href=\"#1-无法启动\" class=\"headerlink\" title=\"1.无法启动\"></a>1.无法启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开finder-&gt;应用程序-&gt;idea.app-&gt;右键-&gt;显示包内容-&gt;然后MaxOS-&gt;双击shell脚本（idea）</span><br></pre></td></tr></table></figure>\n<p>这样是通过命令行的方式来启动IDEA。<br>仔细看里面的提示，尤其Error开头的信息，应该会有具体原因。</p>\n<p>you know？ 然后JetbrainsCrack-3.1-release-enc.jar 被我不小心删了，放回原位就好了……</p>\n<h3 id=\"1-永久使用\"><a href=\"#1-永久使用\" class=\"headerlink\" title=\"1.永久使用\"></a>1.永久使用</h3><p>在输入验证码时，一直提示“key is invaild”，打开~/资源库/Preferences/<br>其中有个 IntelliJIdea2018.2 文件，里面也会有个idea.vmoptions ，也在最后一行加入；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-javaagent:JetbrainsCrack-3.1-release-enc.jar</span><br></pre></td></tr></table></figure>\n<p>再打开软件再次输入验证码即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;licenseId&quot;:&quot;1337&quot;,</span><br><span class=\"line\">&quot;licenseeName&quot;:&quot;ChaosGod&quot;,</span><br><span class=\"line\">&quot;assigneeName&quot;:&quot;&quot;,</span><br><span class=\"line\">&quot;assigneeEmail&quot;:&quot;&quot;,</span><br><span class=\"line\">&quot;licenseRestriction&quot;:&quot;Unlimited license till end of the century.&quot;,</span><br><span class=\"line\">&quot;checkConcurrentUse&quot;:false,</span><br><span class=\"line\">&quot;products&quot;:[</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;II&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;AC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RS0&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;WS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DPN&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;PS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;CL&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;PC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DB&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;GO&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RD&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\">&quot;hash&quot;:&quot;2911276/0&quot;,</span><br><span class=\"line\">&quot;gracePeriodDays&quot;:7,</span><br><span class=\"line\">&quot;autoProlongated&quot;:false&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h2><h2 id=\"快捷方式\"><a href=\"#快捷方式\" class=\"headerlink\" title=\"快捷方式\"></a>快捷方式</h2><h2 id=\"常用插件\"><a href=\"#常用插件\" class=\"headerlink\" title=\"常用插件\"></a>常用插件</h2><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"1-无法启动\"><a href=\"#1-无法启动\" class=\"headerlink\" title=\"1.无法启动\"></a>1.无法启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">打开finder-&gt;应用程序-&gt;idea.app-&gt;右键-&gt;显示包内容-&gt;然后MaxOS-&gt;双击shell脚本（idea）</span><br></pre></td></tr></table></figure>\n<p>这样是通过命令行的方式来启动IDEA。<br>仔细看里面的提示，尤其Error开头的信息，应该会有具体原因。</p>\n<p>you know？ 然后JetbrainsCrack-3.1-release-enc.jar 被我不小心删了，放回原位就好了……</p>\n<h3 id=\"1-永久使用\"><a href=\"#1-永久使用\" class=\"headerlink\" title=\"1.永久使用\"></a>1.永久使用</h3><p>在输入验证码时，一直提示“key is invaild”，打开~/资源库/Preferences/<br>其中有个 IntelliJIdea2018.2 文件，里面也会有个idea.vmoptions ，也在最后一行加入；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-javaagent:JetbrainsCrack-3.1-release-enc.jar</span><br></pre></td></tr></table></figure>\n<p>再打开软件再次输入验证码即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;licenseId&quot;:&quot;1337&quot;,</span><br><span class=\"line\">&quot;licenseeName&quot;:&quot;ChaosGod&quot;,</span><br><span class=\"line\">&quot;assigneeName&quot;:&quot;&quot;,</span><br><span class=\"line\">&quot;assigneeEmail&quot;:&quot;&quot;,</span><br><span class=\"line\">&quot;licenseRestriction&quot;:&quot;Unlimited license till end of the century.&quot;,</span><br><span class=\"line\">&quot;checkConcurrentUse&quot;:false,</span><br><span class=\"line\">&quot;products&quot;:[</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;II&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;AC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RS0&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;WS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DPN&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;PS&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RM&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;CL&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;PC&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;DB&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;GO&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;code&quot;:&quot;RD&quot;,&quot;paidUpTo&quot;:&quot;2099-12-31&quot;&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\">&quot;hash&quot;:&quot;2911276/0&quot;,</span><br><span class=\"line\">&quot;gracePeriodDays&quot;:7,</span><br><span class=\"line\">&quot;autoProlongated&quot;:false&#125;</span><br></pre></td></tr></table></figure>"},{"title":"using-qshell-sync","date":"2018-07-09T07:03:16.000Z","_content":"","source":"_posts/using-qshell-sync.md","raw":"---\ntitle: using-qshell-sync\ndate: 2018-07-09 15:03:16\ntags:\n---\n","slug":"using-qshell-sync","published":1,"updated":"2018-07-09T07:03:17.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyl000ftbwgr75c66jk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"use nexus to maven private service","date":"2018-06-30T16:50:12.000Z","_content":"","source":"_posts/use-nexus-to-maven-private-service.md","raw":"---\ntitle: use nexus to maven private service\ndate: 2018-07-01 00:50:12\ntags:\n---\n","slug":"use-nexus-to-maven-private-service","published":1,"updated":"2018-06-30T16:50:12.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjym000gtbwgf0kw3o1e","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"use-oracle-xe","date":"2019-07-28T14:01:11.000Z","_content":"\n## 下载安装\n\n## PL/SQL\n\n## Navicat 新建表空间、用户及权限\n\n## FAQ\n\n### 身份证明检索失败","source":"_posts/use-oracle-xe.md","raw":"---\ntitle: use-oracle-xe\ndate: 2019-07-28 22:01:11\ntags:\n---\n\n## 下载安装\n\n## PL/SQL\n\n## Navicat 新建表空间、用户及权限\n\n## FAQ\n\n### 身份证明检索失败","slug":"use-oracle-xe","published":1,"updated":"2019-07-28T14:33:33.582Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyn000htbwghesmfutj","content":"<h2 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h2><h2 id=\"PL-SQL\"><a href=\"#PL-SQL\" class=\"headerlink\" title=\"PL/SQL\"></a>PL/SQL</h2><h2 id=\"Navicat-新建表空间、用户及权限\"><a href=\"#Navicat-新建表空间、用户及权限\" class=\"headerlink\" title=\"Navicat 新建表空间、用户及权限\"></a>Navicat 新建表空间、用户及权限</h2><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"身份证明检索失败\"><a href=\"#身份证明检索失败\" class=\"headerlink\" title=\"身份证明检索失败\"></a>身份证明检索失败</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"下载安装\"><a href=\"#下载安装\" class=\"headerlink\" title=\"下载安装\"></a>下载安装</h2><h2 id=\"PL-SQL\"><a href=\"#PL-SQL\" class=\"headerlink\" title=\"PL/SQL\"></a>PL/SQL</h2><h2 id=\"Navicat-新建表空间、用户及权限\"><a href=\"#Navicat-新建表空间、用户及权限\" class=\"headerlink\" title=\"Navicat 新建表空间、用户及权限\"></a>Navicat 新建表空间、用户及权限</h2><h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"身份证明检索失败\"><a href=\"#身份证明检索失败\" class=\"headerlink\" title=\"身份证明检索失败\"></a>身份证明检索失败</h3>"},{"title":"element-ui动态表单项验证","date":"2019-10-10T08:19:34.000Z","_content":"\n## 动态表单校验\n\n\n\n### 注意 :porp :rules\n\n### form model \n\n### callback 每个条件都要有，不然提交无响应","source":"_posts/vue-elementui-form-validation.md","raw":"---\ntitle: element-ui动态表单项验证\ndate: 2019-10-10 16:19:34\ntags:\n---\n\n## 动态表单校验\n\n\n\n### 注意 :porp :rules\n\n### form model \n\n### callback 每个条件都要有，不然提交无响应","slug":"vue-elementui-form-validation","published":1,"updated":"2019-10-24T03:17:57.557Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyo000itbwgib9kj399","content":"<h2 id=\"动态表单校验\"><a href=\"#动态表单校验\" class=\"headerlink\" title=\"动态表单校验\"></a>动态表单校验</h2><h3 id=\"注意-porp-rules\"><a href=\"#注意-porp-rules\" class=\"headerlink\" title=\"注意 :porp :rules\"></a>注意 :porp :rules</h3><h3 id=\"form-model\"><a href=\"#form-model\" class=\"headerlink\" title=\"form model\"></a>form model</h3><h3 id=\"callback-每个条件都要有，不然提交无响应\"><a href=\"#callback-每个条件都要有，不然提交无响应\" class=\"headerlink\" title=\"callback 每个条件都要有，不然提交无响应\"></a>callback 每个条件都要有，不然提交无响应</h3>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"动态表单校验\"><a href=\"#动态表单校验\" class=\"headerlink\" title=\"动态表单校验\"></a>动态表单校验</h2><h3 id=\"注意-porp-rules\"><a href=\"#注意-porp-rules\" class=\"headerlink\" title=\"注意 :porp :rules\"></a>注意 :porp :rules</h3><h3 id=\"form-model\"><a href=\"#form-model\" class=\"headerlink\" title=\"form model\"></a>form model</h3><h3 id=\"callback-每个条件都要有，不然提交无响应\"><a href=\"#callback-每个条件都要有，不然提交无响应\" class=\"headerlink\" title=\"callback 每个条件都要有，不然提交无响应\"></a>callback 每个条件都要有，不然提交无响应</h3>"},{"title":"利用vuex实现数据字典","date":"2019-08-20T01:25:46.000Z","_content":"\n### vuex定义\n\n```js\n\nstate:{\n    // 排序类型字典\n    messageOrderTypeDict: [],\n    // 排序参数字典\n    messageOrderParamDict: [],\n},\ngetters: {\n    messageOrderParamDict (state) {\n        return state.messageOrderParamDict\n    },\n    messageOrderTypeDict (state) {\n        return state.messageOrderTypeDict\n    },\n},\nmutations:{\n    SET_MESSAGE_ORDER_PARAM_DICT (state, payload) {\n        state.messageOrderParamDict = payload\n    },\n    SET_MESSAGE_COMMENT_LIST (state, payload) {\n        state.messageCommentList = payload\n    },\n},\nactions:{\n    // 获取排序方向，排序类型字典\n    getMessageOrderDict ({ commit }, payload) {\n        http.request(App.getDictionary, payload).then(res => {\n            const data = _.get(res, 'data') || {}\n            commit('SET_MESSAGE_ORDER_PARAM_DICT', data['order-param'])\n            commit('SET_MESSAGE_ORDER_TYPE_DICT', data['order-type'])\n        })\n    },\n}\n\n```\n\n\n### 页面调用\n\n```js\n\nimport { mapGetters } from 'vuex'\n\ncomputed: {\n    ...mapGetters([\n        // 排序字典\n        'messageOrderTypeDict',\n        // 排序字典\n        'messageOrderParamDict'\n    ])\n},\ncreated () {\n    this.getMessageOrderDict()\n},\nmethods: {\n    getMessageOrderDict () {\n        this.$store.dispatch('getMessageOrderDict', ['order-param', 'order-type'])\n    },\n}\n\n```","source":"_posts/using-vuex-to-realize-dict.md","raw":"---\ntitle: 利用vuex实现数据字典\ndate: 2019-08-20 09:25:46\ntags:\n---\n\n### vuex定义\n\n```js\n\nstate:{\n    // 排序类型字典\n    messageOrderTypeDict: [],\n    // 排序参数字典\n    messageOrderParamDict: [],\n},\ngetters: {\n    messageOrderParamDict (state) {\n        return state.messageOrderParamDict\n    },\n    messageOrderTypeDict (state) {\n        return state.messageOrderTypeDict\n    },\n},\nmutations:{\n    SET_MESSAGE_ORDER_PARAM_DICT (state, payload) {\n        state.messageOrderParamDict = payload\n    },\n    SET_MESSAGE_COMMENT_LIST (state, payload) {\n        state.messageCommentList = payload\n    },\n},\nactions:{\n    // 获取排序方向，排序类型字典\n    getMessageOrderDict ({ commit }, payload) {\n        http.request(App.getDictionary, payload).then(res => {\n            const data = _.get(res, 'data') || {}\n            commit('SET_MESSAGE_ORDER_PARAM_DICT', data['order-param'])\n            commit('SET_MESSAGE_ORDER_TYPE_DICT', data['order-type'])\n        })\n    },\n}\n\n```\n\n\n### 页面调用\n\n```js\n\nimport { mapGetters } from 'vuex'\n\ncomputed: {\n    ...mapGetters([\n        // 排序字典\n        'messageOrderTypeDict',\n        // 排序字典\n        'messageOrderParamDict'\n    ])\n},\ncreated () {\n    this.getMessageOrderDict()\n},\nmethods: {\n    getMessageOrderDict () {\n        this.$store.dispatch('getMessageOrderDict', ['order-param', 'order-type'])\n    },\n}\n\n```","slug":"using-vuex-to-realize-dict","published":1,"updated":"2019-08-20T03:16:27.269Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyp000jtbwg4ep1pmp6","content":"<h3 id=\"vuex定义\"><a href=\"#vuex定义\" class=\"headerlink\" title=\"vuex定义\"></a>vuex定义</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">state:&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 排序类型字典</span></span><br><span class=\"line\">    messageOrderTypeDict: [],</span><br><span class=\"line\">    <span class=\"comment\">// 排序参数字典</span></span><br><span class=\"line\">    messageOrderParamDict: [],</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">getters: &#123;</span><br><span class=\"line\">    messageOrderParamDict (state) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.messageOrderParamDict</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    messageOrderTypeDict (state) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.messageOrderTypeDict</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">mutations:&#123;</span><br><span class=\"line\">    SET_MESSAGE_ORDER_PARAM_DICT (state, payload) &#123;</span><br><span class=\"line\">        state.messageOrderParamDict = payload</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    SET_MESSAGE_COMMENT_LIST (state, payload) &#123;</span><br><span class=\"line\">        state.messageCommentList = payload</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">actions:&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取排序方向，排序类型字典</span></span><br><span class=\"line\">    getMessageOrderDict (&#123; commit &#125;, payload) &#123;</span><br><span class=\"line\">        http.request(App.getDictionary, payload).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> data = _.get(res, <span class=\"string\">'data'</span>) || &#123;&#125;</span><br><span class=\"line\">            commit(<span class=\"string\">'SET_MESSAGE_ORDER_PARAM_DICT'</span>, data[<span class=\"string\">'order-param'</span>])</span><br><span class=\"line\">            commit(<span class=\"string\">'SET_MESSAGE_ORDER_TYPE_DICT'</span>, data[<span class=\"string\">'order-type'</span>])</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面调用\"><a href=\"#页面调用\" class=\"headerlink\" title=\"页面调用\"></a>页面调用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    ...mapGetters([</span><br><span class=\"line\">        <span class=\"comment\">// 排序字典</span></span><br><span class=\"line\">        <span class=\"string\">'messageOrderTypeDict'</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 排序字典</span></span><br><span class=\"line\">        <span class=\"string\">'messageOrderParamDict'</span></span><br><span class=\"line\">    ])</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">created () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getMessageOrderDict()</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    getMessageOrderDict () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'getMessageOrderDict'</span>, [<span class=\"string\">'order-param'</span>, <span class=\"string\">'order-type'</span>])</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"vuex定义\"><a href=\"#vuex定义\" class=\"headerlink\" title=\"vuex定义\"></a>vuex定义</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">state:&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 排序类型字典</span></span><br><span class=\"line\">    messageOrderTypeDict: [],</span><br><span class=\"line\">    <span class=\"comment\">// 排序参数字典</span></span><br><span class=\"line\">    messageOrderParamDict: [],</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">getters: &#123;</span><br><span class=\"line\">    messageOrderParamDict (state) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.messageOrderParamDict</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    messageOrderTypeDict (state) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state.messageOrderTypeDict</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">mutations:&#123;</span><br><span class=\"line\">    SET_MESSAGE_ORDER_PARAM_DICT (state, payload) &#123;</span><br><span class=\"line\">        state.messageOrderParamDict = payload</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    SET_MESSAGE_COMMENT_LIST (state, payload) &#123;</span><br><span class=\"line\">        state.messageCommentList = payload</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">actions:&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 获取排序方向，排序类型字典</span></span><br><span class=\"line\">    getMessageOrderDict (&#123; commit &#125;, payload) &#123;</span><br><span class=\"line\">        http.request(App.getDictionary, payload).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> data = _.get(res, <span class=\"string\">'data'</span>) || &#123;&#125;</span><br><span class=\"line\">            commit(<span class=\"string\">'SET_MESSAGE_ORDER_PARAM_DICT'</span>, data[<span class=\"string\">'order-param'</span>])</span><br><span class=\"line\">            commit(<span class=\"string\">'SET_MESSAGE_ORDER_TYPE_DICT'</span>, data[<span class=\"string\">'order-type'</span>])</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面调用\"><a href=\"#页面调用\" class=\"headerlink\" title=\"页面调用\"></a>页面调用</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; mapGetters &#125; <span class=\"keyword\">from</span> <span class=\"string\">'vuex'</span></span><br><span class=\"line\"></span><br><span class=\"line\">computed: &#123;</span><br><span class=\"line\">    ...mapGetters([</span><br><span class=\"line\">        <span class=\"comment\">// 排序字典</span></span><br><span class=\"line\">        <span class=\"string\">'messageOrderTypeDict'</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 排序字典</span></span><br><span class=\"line\">        <span class=\"string\">'messageOrderParamDict'</span></span><br><span class=\"line\">    ])</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">created () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.getMessageOrderDict()</span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">methods: &#123;</span><br><span class=\"line\">    getMessageOrderDict () &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.$store.dispatch(<span class=\"string\">'getMessageOrderDict'</span>, [<span class=\"string\">'order-param'</span>, <span class=\"string\">'order-type'</span>])</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"If you are using vue-loader@>=10.0, simply update vue-template-compiler","date":"2019-09-12T07:57:33.000Z","_content":"\n## 问题说明\n\n```\nModule build failed: Error: \n\nVue packages version mismatch:\n\n- vue@2.5.17 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue/dist/vue.runtime.common.js)\n- vue-template-compiler@2.6.10 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue-template-compiler/package.json)\n\nThis may cause things to work incorrectly. Make sure to use the same version for both.\nIf you are using vue-loader@>=10.0, simply update vue-template-compiler.\nIf you are using vue-loader@<10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.\n```\n\n## 解决方法\n\n经常有启动vue工程时会出现如上错误提示，出现这种错误之后可以使用命令，将vue的版本改成和vue-template-compiler的版本一致，使用命令\n\n```\nnpm install vue@2.6.10 --save \nyarn add vue@2.6.10\n```\n","source":"_posts/vue-packages-version-mismatch.md","raw":"---\ntitle: If you are using vue-loader@>=10.0, simply update vue-template-compiler\ndate: 2019-09-12 15:57:33\ntags:\n---\n\n## 问题说明\n\n```\nModule build failed: Error: \n\nVue packages version mismatch:\n\n- vue@2.5.17 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue/dist/vue.runtime.common.js)\n- vue-template-compiler@2.6.10 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue-template-compiler/package.json)\n\nThis may cause things to work incorrectly. Make sure to use the same version for both.\nIf you are using vue-loader@>=10.0, simply update vue-template-compiler.\nIf you are using vue-loader@<10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.\n```\n\n## 解决方法\n\n经常有启动vue工程时会出现如上错误提示，出现这种错误之后可以使用命令，将vue的版本改成和vue-template-compiler的版本一致，使用命令\n\n```\nnpm install vue@2.6.10 --save \nyarn add vue@2.6.10\n```\n","slug":"vue-packages-version-mismatch","published":1,"updated":"2019-09-12T08:04:38.633Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyq000ktbwg71qld8ev","content":"<h2 id=\"问题说明\"><a href=\"#问题说明\" class=\"headerlink\" title=\"问题说明\"></a>问题说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Module build failed: Error: </span><br><span class=\"line\"></span><br><span class=\"line\">Vue packages version mismatch:</span><br><span class=\"line\"></span><br><span class=\"line\">- vue@2.5.17 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue/dist/vue.runtime.common.js)</span><br><span class=\"line\">- vue-template-compiler@2.6.10 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue-template-compiler/package.json)</span><br><span class=\"line\"></span><br><span class=\"line\">This may cause things to work incorrectly. Make sure to use the same version for both.</span><br><span class=\"line\">If you are using vue-loader@&gt;=10.0, simply update vue-template-compiler.</span><br><span class=\"line\">If you are using vue-loader@&lt;10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>经常有启动vue工程时会出现如上错误提示，出现这种错误之后可以使用命令，将vue的版本改成和vue-template-compiler的版本一致，使用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue@2.6.10 --save </span><br><span class=\"line\">yarn add vue@2.6.10</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"问题说明\"><a href=\"#问题说明\" class=\"headerlink\" title=\"问题说明\"></a>问题说明</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Module build failed: Error: </span><br><span class=\"line\"></span><br><span class=\"line\">Vue packages version mismatch:</span><br><span class=\"line\"></span><br><span class=\"line\">- vue@2.5.17 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue/dist/vue.runtime.common.js)</span><br><span class=\"line\">- vue-template-compiler@2.6.10 (/Users/xinzhang/Documents/IdeaProjects/incubator-vue-antd-admin/node_modules/vue-template-compiler/package.json)</span><br><span class=\"line\"></span><br><span class=\"line\">This may cause things to work incorrectly. Make sure to use the same version for both.</span><br><span class=\"line\">If you are using vue-loader@&gt;=10.0, simply update vue-template-compiler.</span><br><span class=\"line\">If you are using vue-loader@&lt;10.0 or vueify, re-installing vue-loader/vueify should bump vue-template-compiler to the latest.</span><br></pre></td></tr></table></figure>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>经常有启动vue工程时会出现如上错误提示，出现这种错误之后可以使用命令，将vue的版本改成和vue-template-compiler的版本一致，使用命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install vue@2.6.10 --save </span><br><span class=\"line\">yarn add vue@2.6.10</span><br></pre></td></tr></table></figure>\n"},{"title":"使用VuePress生成项目文档网站","date":"2018-09-23T08:33:02.000Z","_content":"\n**VuePress** 是一个基于Vue的轻量级静态网站生成器，用于满足项目文档的需求而创建的。\n\n## VuePress 安装\n\nVuePress并不会象其他静态网站工具如：Hexo 那样帮我们创建好目录结构和文件。因此需要我们在指定文件夹中新建目录结构和文件如下：\n\n```\n.\n├─ docs\n│  └─ .vuepress\n│     └─ config.js\n│  ├─ guide\n│     └─ getting-started.md\n│     └─ README.md\n│  ├─ README.md\n└─ package.json\n```\n\n###  config.js\n\n网站的 [配置]() 信息，您可以在此配置大部分的参数。这里提供常用基本的配置：\n\n```\nmodule.exports = {\n    base:'/vuepress/',\n    title: 'Wizard',\n    description: 'Welcome to Wizard site',\n    themeConfig: {\n        nav: [\n            { text: 'Home', link: '/' },\n            { text: '指南', link: '/guide/' },\n            { text: 'VuePress', link: 'https://vuepress.vuejs.org/' },\n        ],\n        sidebar: { '/guide/': genSidebarConfig('指南') }\n    }\n}\n\nfunction genSidebarConfig(title) {\n    return [\n        {\n          title,\n          collapsable: false,\n          children: [\n            '',\n            'getting-started',\n          ]\n        }\n      ]\n}\n```\n\n### package.json\n\n应用程序的信息。\n\n```\n{\n  \"scripts\": {\n    \"docs:dev\": \"vuepress dev docs\",\n    \"docs:build\": \"vuepress build docs\",\n    \"deploy\": \"gh-pages -d docs/.vuepress/dist\",\n    \"deploy:build\": \"npm run docs:build && gh-pages -d docs/.vuepress/dist\"\n  },\n  \"devDependencies\": {\n    \"gh-pages\": \"^2.0.0\"\n  }\n}\n```\n\n### 指令\n\n执行下列命令，可以开始写作了。\n\n```\n# 全局安装VuePress\nnpm install -g vuepress\n\n# 安装组件\nnpm install\n\n# 开始写作\nnpm run docs:dev\n\n# 构建静态文件\nnpm run docs:build\n```\n\n### 在Github Page部署\n\n1. 创建仓库\n\n> - 如果要部署到https://{USERNAME}.github.io地址上，需要创建以{USERNAME}.github.io为名字的仓库\n> - 如果部署到https://{USERNAME}.github.io/{REPO}/地址上，要创建{REPO}仓库。\n\n2. 添加远程仓库\b\n\n```\n# 用你仓库的url\ngit remote add origin https://<USERNAME>.github.io/<REPO>.git   \n\n# 提交到你的仓库\ngit push -u origin master  \n```\n\n3. 发布\n\n```\n# 使用gh-pages组件打包并推送\n$ sudo npm run deploy:build\n```\n看到如下日志部署成功：\n\n```\n> npm run docs:build && gh-pages -d docs/.vuepress/dist\n\n> vuepress build docs\n\n WAIT  Extracting site metadata...\n[13:51:40] Compiling Client\n[13:51:40] Compiling Server\n(node:2939) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\n[13:51:45] Compiled Server in 5s\n[13:51:49] Compiled Client in 9s\n WAIT  Rendering static HTML...\n\n DONE  Success! Generated static files in docs/.vuepress/dist.\n\nPublished\n```\n\n部署成功后，进入 GitHub 仓库可以看到自动创建了一个新的名为 gh_pages 的分支。在仓库 **setting** 中选择这个分支，通过如下地址即可访问：\n\nhttps://{USERNAME}.github.io/{REPO}\n\n","source":"_posts/vuepress-install.md","raw":"---\ntitle: 使用VuePress生成项目文档网站\ndate: 2018-09-23 16:33:02\ntags:\n---\n\n**VuePress** 是一个基于Vue的轻量级静态网站生成器，用于满足项目文档的需求而创建的。\n\n## VuePress 安装\n\nVuePress并不会象其他静态网站工具如：Hexo 那样帮我们创建好目录结构和文件。因此需要我们在指定文件夹中新建目录结构和文件如下：\n\n```\n.\n├─ docs\n│  └─ .vuepress\n│     └─ config.js\n│  ├─ guide\n│     └─ getting-started.md\n│     └─ README.md\n│  ├─ README.md\n└─ package.json\n```\n\n###  config.js\n\n网站的 [配置]() 信息，您可以在此配置大部分的参数。这里提供常用基本的配置：\n\n```\nmodule.exports = {\n    base:'/vuepress/',\n    title: 'Wizard',\n    description: 'Welcome to Wizard site',\n    themeConfig: {\n        nav: [\n            { text: 'Home', link: '/' },\n            { text: '指南', link: '/guide/' },\n            { text: 'VuePress', link: 'https://vuepress.vuejs.org/' },\n        ],\n        sidebar: { '/guide/': genSidebarConfig('指南') }\n    }\n}\n\nfunction genSidebarConfig(title) {\n    return [\n        {\n          title,\n          collapsable: false,\n          children: [\n            '',\n            'getting-started',\n          ]\n        }\n      ]\n}\n```\n\n### package.json\n\n应用程序的信息。\n\n```\n{\n  \"scripts\": {\n    \"docs:dev\": \"vuepress dev docs\",\n    \"docs:build\": \"vuepress build docs\",\n    \"deploy\": \"gh-pages -d docs/.vuepress/dist\",\n    \"deploy:build\": \"npm run docs:build && gh-pages -d docs/.vuepress/dist\"\n  },\n  \"devDependencies\": {\n    \"gh-pages\": \"^2.0.0\"\n  }\n}\n```\n\n### 指令\n\n执行下列命令，可以开始写作了。\n\n```\n# 全局安装VuePress\nnpm install -g vuepress\n\n# 安装组件\nnpm install\n\n# 开始写作\nnpm run docs:dev\n\n# 构建静态文件\nnpm run docs:build\n```\n\n### 在Github Page部署\n\n1. 创建仓库\n\n> - 如果要部署到https://{USERNAME}.github.io地址上，需要创建以{USERNAME}.github.io为名字的仓库\n> - 如果部署到https://{USERNAME}.github.io/{REPO}/地址上，要创建{REPO}仓库。\n\n2. 添加远程仓库\b\n\n```\n# 用你仓库的url\ngit remote add origin https://<USERNAME>.github.io/<REPO>.git   \n\n# 提交到你的仓库\ngit push -u origin master  \n```\n\n3. 发布\n\n```\n# 使用gh-pages组件打包并推送\n$ sudo npm run deploy:build\n```\n看到如下日志部署成功：\n\n```\n> npm run docs:build && gh-pages -d docs/.vuepress/dist\n\n> vuepress build docs\n\n WAIT  Extracting site metadata...\n[13:51:40] Compiling Client\n[13:51:40] Compiling Server\n(node:2939) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead\n[13:51:45] Compiled Server in 5s\n[13:51:49] Compiled Client in 9s\n WAIT  Rendering static HTML...\n\n DONE  Success! Generated static files in docs/.vuepress/dist.\n\nPublished\n```\n\n部署成功后，进入 GitHub 仓库可以看到自动创建了一个新的名为 gh_pages 的分支。在仓库 **setting** 中选择这个分支，通过如下地址即可访问：\n\nhttps://{USERNAME}.github.io/{REPO}\n\n","slug":"vuepress-install","published":1,"updated":"2018-09-24T02:04:02.268Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck99xjjyr000ltbwgh2wke2yb","content":"<p><strong>VuePress</strong> 是一个基于Vue的轻量级静态网站生成器，用于满足项目文档的需求而创建的。</p>\n<h2 id=\"VuePress-安装\"><a href=\"#VuePress-安装\" class=\"headerlink\" title=\"VuePress 安装\"></a>VuePress 安装</h2><p>VuePress并不会象其他静态网站工具如：Hexo 那样帮我们创建好目录结构和文件。因此需要我们在指定文件夹中新建目录结构和文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├─ docs</span><br><span class=\"line\">│  └─ .vuepress</span><br><span class=\"line\">│     └─ config.js</span><br><span class=\"line\">│  ├─ guide</span><br><span class=\"line\">│     └─ getting-started.md</span><br><span class=\"line\">│     └─ README.md</span><br><span class=\"line\">│  ├─ README.md</span><br><span class=\"line\">└─ package.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-js\"><a href=\"#config-js\" class=\"headerlink\" title=\"config.js\"></a>config.js</h3><p>网站的 <a href=\"\">配置</a> 信息，您可以在此配置大部分的参数。这里提供常用基本的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    base:&apos;/vuepress/&apos;,</span><br><span class=\"line\">    title: &apos;Wizard&apos;,</span><br><span class=\"line\">    description: &apos;Welcome to Wizard site&apos;,</span><br><span class=\"line\">    themeConfig: &#123;</span><br><span class=\"line\">        nav: [</span><br><span class=\"line\">            &#123; text: &apos;Home&apos;, link: &apos;/&apos; &#125;,</span><br><span class=\"line\">            &#123; text: &apos;指南&apos;, link: &apos;/guide/&apos; &#125;,</span><br><span class=\"line\">            &#123; text: &apos;VuePress&apos;, link: &apos;https://vuepress.vuejs.org/&apos; &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        sidebar: &#123; &apos;/guide/&apos;: genSidebarConfig(&apos;指南&apos;) &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function genSidebarConfig(title) &#123;</span><br><span class=\"line\">    return [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          title,</span><br><span class=\"line\">          collapsable: false,</span><br><span class=\"line\">          children: [</span><br><span class=\"line\">            &apos;&apos;,</span><br><span class=\"line\">            &apos;getting-started&apos;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>应用程序的信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;docs:dev&quot;: &quot;vuepress dev docs&quot;,</span><br><span class=\"line\">    &quot;docs:build&quot;: &quot;vuepress build docs&quot;,</span><br><span class=\"line\">    &quot;deploy&quot;: &quot;gh-pages -d docs/.vuepress/dist&quot;,</span><br><span class=\"line\">    &quot;deploy:build&quot;: &quot;npm run docs:build &amp;&amp; gh-pages -d docs/.vuepress/dist&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;gh-pages&quot;: &quot;^2.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><p>执行下列命令，可以开始写作了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 全局安装VuePress</span><br><span class=\"line\">npm install -g vuepress</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"># 开始写作</span><br><span class=\"line\">npm run docs:dev</span><br><span class=\"line\"></span><br><span class=\"line\"># 构建静态文件</span><br><span class=\"line\">npm run docs:build</span><br></pre></td></tr></table></figure>\n<h3 id=\"在Github-Page部署\"><a href=\"#在Github-Page部署\" class=\"headerlink\" title=\"在Github Page部署\"></a>在Github Page部署</h3><ol>\n<li>创建仓库</li>\n</ol>\n<blockquote>\n<ul>\n<li>如果要部署到https://{USERNAME}.github.io地址上，需要创建以{USERNAME}.github.io为名字的仓库</li>\n<li>如果部署到https://{USERNAME}.github.io/{REPO}/地址上，要创建{REPO}仓库。</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>添加远程仓库\b</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 用你仓库的url</span><br><span class=\"line\">git remote add origin https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;.git   </span><br><span class=\"line\"></span><br><span class=\"line\"># 提交到你的仓库</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>发布</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用gh-pages组件打包并推送</span><br><span class=\"line\">$ sudo npm run deploy:build</span><br></pre></td></tr></table></figure>\n<p>看到如下日志部署成功：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm run docs:build &amp;&amp; gh-pages -d docs/.vuepress/dist</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; vuepress build docs</span><br><span class=\"line\"></span><br><span class=\"line\"> WAIT  Extracting site metadata...</span><br><span class=\"line\">[13:51:40] Compiling Client</span><br><span class=\"line\">[13:51:40] Compiling Server</span><br><span class=\"line\">(node:2939) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead</span><br><span class=\"line\">[13:51:45] Compiled Server in 5s</span><br><span class=\"line\">[13:51:49] Compiled Client in 9s</span><br><span class=\"line\"> WAIT  Rendering static HTML...</span><br><span class=\"line\"></span><br><span class=\"line\"> DONE  Success! Generated static files in docs/.vuepress/dist.</span><br><span class=\"line\"></span><br><span class=\"line\">Published</span><br></pre></td></tr></table></figure>\n<p>部署成功后，进入 GitHub 仓库可以看到自动创建了一个新的名为 gh_pages 的分支。在仓库 <strong>setting</strong> 中选择这个分支，通过如下地址即可访问：</p>\n<p>https://{USERNAME}.github.io/{REPO}</p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>VuePress</strong> 是一个基于Vue的轻量级静态网站生成器，用于满足项目文档的需求而创建的。</p>\n<h2 id=\"VuePress-安装\"><a href=\"#VuePress-安装\" class=\"headerlink\" title=\"VuePress 安装\"></a>VuePress 安装</h2><p>VuePress并不会象其他静态网站工具如：Hexo 那样帮我们创建好目录结构和文件。因此需要我们在指定文件夹中新建目录结构和文件如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├─ docs</span><br><span class=\"line\">│  └─ .vuepress</span><br><span class=\"line\">│     └─ config.js</span><br><span class=\"line\">│  ├─ guide</span><br><span class=\"line\">│     └─ getting-started.md</span><br><span class=\"line\">│     └─ README.md</span><br><span class=\"line\">│  ├─ README.md</span><br><span class=\"line\">└─ package.json</span><br></pre></td></tr></table></figure>\n<h3 id=\"config-js\"><a href=\"#config-js\" class=\"headerlink\" title=\"config.js\"></a>config.js</h3><p>网站的 <a href=\"\">配置</a> 信息，您可以在此配置大部分的参数。这里提供常用基本的配置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">module.exports = &#123;</span><br><span class=\"line\">    base:&apos;/vuepress/&apos;,</span><br><span class=\"line\">    title: &apos;Wizard&apos;,</span><br><span class=\"line\">    description: &apos;Welcome to Wizard site&apos;,</span><br><span class=\"line\">    themeConfig: &#123;</span><br><span class=\"line\">        nav: [</span><br><span class=\"line\">            &#123; text: &apos;Home&apos;, link: &apos;/&apos; &#125;,</span><br><span class=\"line\">            &#123; text: &apos;指南&apos;, link: &apos;/guide/&apos; &#125;,</span><br><span class=\"line\">            &#123; text: &apos;VuePress&apos;, link: &apos;https://vuepress.vuejs.org/&apos; &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        sidebar: &#123; &apos;/guide/&apos;: genSidebarConfig(&apos;指南&apos;) &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function genSidebarConfig(title) &#123;</span><br><span class=\"line\">    return [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          title,</span><br><span class=\"line\">          collapsable: false,</span><br><span class=\"line\">          children: [</span><br><span class=\"line\">            &apos;&apos;,</span><br><span class=\"line\">            &apos;getting-started&apos;,</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>应用程序的信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;scripts&quot;: &#123;</span><br><span class=\"line\">    &quot;docs:dev&quot;: &quot;vuepress dev docs&quot;,</span><br><span class=\"line\">    &quot;docs:build&quot;: &quot;vuepress build docs&quot;,</span><br><span class=\"line\">    &quot;deploy&quot;: &quot;gh-pages -d docs/.vuepress/dist&quot;,</span><br><span class=\"line\">    &quot;deploy:build&quot;: &quot;npm run docs:build &amp;&amp; gh-pages -d docs/.vuepress/dist&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;devDependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;gh-pages&quot;: &quot;^2.0.0&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"指令\"><a href=\"#指令\" class=\"headerlink\" title=\"指令\"></a>指令</h3><p>执行下列命令，可以开始写作了。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 全局安装VuePress</span><br><span class=\"line\">npm install -g vuepress</span><br><span class=\"line\"></span><br><span class=\"line\"># 安装组件</span><br><span class=\"line\">npm install</span><br><span class=\"line\"></span><br><span class=\"line\"># 开始写作</span><br><span class=\"line\">npm run docs:dev</span><br><span class=\"line\"></span><br><span class=\"line\"># 构建静态文件</span><br><span class=\"line\">npm run docs:build</span><br></pre></td></tr></table></figure>\n<h3 id=\"在Github-Page部署\"><a href=\"#在Github-Page部署\" class=\"headerlink\" title=\"在Github Page部署\"></a>在Github Page部署</h3><ol>\n<li>创建仓库</li>\n</ol>\n<blockquote>\n<ul>\n<li>如果要部署到https://{USERNAME}.github.io地址上，需要创建以{USERNAME}.github.io为名字的仓库</li>\n<li>如果部署到https://{USERNAME}.github.io/{REPO}/地址上，要创建{REPO}仓库。</li>\n</ul>\n</blockquote>\n<ol start=\"2\">\n<li>添加远程仓库\b</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 用你仓库的url</span><br><span class=\"line\">git remote add origin https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;.git   </span><br><span class=\"line\"></span><br><span class=\"line\"># 提交到你的仓库</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>发布</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用gh-pages组件打包并推送</span><br><span class=\"line\">$ sudo npm run deploy:build</span><br></pre></td></tr></table></figure>\n<p>看到如下日志部署成功：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; npm run docs:build &amp;&amp; gh-pages -d docs/.vuepress/dist</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; vuepress build docs</span><br><span class=\"line\"></span><br><span class=\"line\"> WAIT  Extracting site metadata...</span><br><span class=\"line\">[13:51:40] Compiling Client</span><br><span class=\"line\">[13:51:40] Compiling Server</span><br><span class=\"line\">(node:2939) DeprecationWarning: Tapable.plugin is deprecated. Use new API on `.hooks` instead</span><br><span class=\"line\">[13:51:45] Compiled Server in 5s</span><br><span class=\"line\">[13:51:49] Compiled Client in 9s</span><br><span class=\"line\"> WAIT  Rendering static HTML...</span><br><span class=\"line\"></span><br><span class=\"line\"> DONE  Success! Generated static files in docs/.vuepress/dist.</span><br><span class=\"line\"></span><br><span class=\"line\">Published</span><br></pre></td></tr></table></figure>\n<p>部署成功后，进入 GitHub 仓库可以看到自动创建了一个新的名为 gh_pages 的分支。在仓库 <strong>setting</strong> 中选择这个分支，通过如下地址即可访问：</p>\n<p>https://{USERNAME}.github.io/{REPO}</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}